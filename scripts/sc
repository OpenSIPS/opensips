#!/bin/sh 
#
# $Id$
#
# sc: ser control; tool for maintaining ser's databases
#

# realm
DOMAIN=iptel.org

# SQL config
SQL_DB=csps107
SQL_HOST=dbhost
SQL_USER=csps

# the read-only user for whom password may be stored here
RO_USER=serro
RO_PW=47serro11

# binaries
GENHA1='gen_ha1'
MYSQL='mysql'
SER='sr'

# SQL names
USER_COLUMN=user
REALM_COLUMN=realm
HA1_COLUMN=HA1
HA1B_COLUMN=HA1B
# subscriber table
TABLE=subscriber
# Usr Loc Table
USRLOC=location
PASSWORD_COLUMN=password
SUBSCRIBER_COLUMN='user_id'
EMAIL_COLUMN=email_address



usage() {
	echo "usage: "
	echo -n "   $0 add <name> <password> <email> "
	echo "... introduce a new subscriber (*)"
	echo "   $0 dul <name> ... delete user's UsrLoc entries (*)"
	echo "   $0 show [<name>] ... show online users"
	echo "   $0 mail <name> ... send an email to a user"
	echo "   $0 rm <name> ... delete a user (*)"
	echo "   $0 passwd <user> <passwd> ... change user's password (*)"
	echo "   $0 stat ... show runnig processes + $0 show"
	echo 
	echo "   commands labeled with (*) will prompt for a MySQL password"
}


case $1 in

	passwd)
		if [ $# -ne 3 ] ; then
			usage
			exit 1
		fi
		shift

		HA1=`$GENHA1 $1 $DOMAIN $2`
		if [ $? -ne 0 ] ; then
			echo "HA1 calculation failed"
			exit 1
		fi
		HA1B=`$GENHA1 "$1@$DOMAIN" $DOMAIN $2`
		if [ $? -ne 0 ] ; then
			echo "HA1B calculation failed"
			exit 1
		fi
		read -s -p "MySql Password: " PW
		echo 
		CNT=`$MYSQL -B -h $SQL_HOST -u $SQL_USER -p$PW \
			-e "use $SQL_DB; select count(*) from $TABLE \
			where $SUBSCRIBER_COLUMN='$1' and $REALM_COLUMN='$DOMAIN';" \
			| tail -n1`
		if [ $CNT -eq 0 ] ; then
			echo "No such user exists"
			exit 1
		fi
		$MYSQL -h $SQL_HOST -u $SQL_USER -p$PW \
			-e "use $SQL_DB; update $TABLE \
			set $HA1_COLUMN='$HA1', $HA1B_COLUMN='$HA1B', $PASSWORD_COLUMN='$2' \
			WHERE $SUBSCRIBER_COLUMN='$1' and $REALM_COLUMN='$DOMAIN';"
		if [ $? -ne 0 ] ; then
			echo "password change failed"
		else
			echo "password change succeeded"
		fi

		;;		
			
		

	add)
		if [ $# -ne 4 ] ; then
			usage
			exit 1
		fi
		shift

		HA1=`$GENHA1 $1 $DOMAIN $2`
		if [ $? -ne 0 ] ; then
			echo "HA1 calculation failed"
			exit 1
		fi
		HA1B=`$GENHA1 "$1@$DOMAIN" $DOMAIN $2`
		if [ $? -ne 0 ] ; then
			echo "HA1B calculation failed"
			exit 1
		fi

		read -s -p "MySql Password: " PW
		echo
		
		CNT=`$MYSQL -B -h $SQL_HOST -u $SQL_USER -p$PW \
			-e "use $SQL_DB; select count(*) from $TABLE \
			where $SUBSCRIBER_COLUMN='$1' and $REALM_COLUMN='$DOMAIN';" \
			| tail -n1`
		if [ $CNT -ne 0 ] ; then
			echo "user '$1' already exists"
			exit 1
		fi
		$MYSQL -h $SQL_HOST -u $SQL_USER -p$PW \
			-e "use $SQL_DB; insert into $TABLE \
				($SUBSCRIBER_COLUMN,$REALM_COLUMN,$HA1_COLUMN,\
				$HA1B_COLUMN,$PASSWORD_COLUMN,$EMAIL_COLUMN) \
				values ('$1','$DOMAIN','$HA1','$HA1B','$2', '$3');";
		if [ $? -ne 0 ] ; then
			echo "introducing a new user to the database failed"
		else
			echo "new user added"
		fi

		;;

	dul)
		if [ $# -ne 2 ] ; then
			usage
			exit 1
		fi
		read -s -p "MySql Password: " PW
		echo
		CNT=`$MYSQL -B -h $SQL_HOST -u $SQL_USER -p$PW \
			 -e "use $SQL_DB; select count(*) from $USRLOC \
			where $USRLOC.$USER_COLUMN='$2';" | tail -n1`
		if [ $CNT -eq 0 ] ; then
			echo Nothing to delete
			exit 1
		fi
		QUERY="delete from $USRLOC where $USRLOC.$USER_COLUMN='$2'"
		mysql -h $SQL_HOST -u $SQL_USER "-p$PW" -e "$QUERY ;" $SQL_DB
		if [ $? -ne 0 ] ; then
			echo "database operation failed"
		else
			echo "ok -- but beware, the server caches the usrloc entries"
			echo "and the changes don't take effect until ser reboot"
		fi
		;;

	mail)
		if [ $# -ne 2 ] ; then
			usage
			exit 1
		fi
		shift
		QUERY="select $TABLE.$EMAIL_COLUMN from $TABLE where  \
			$TABLE.$SUBSCRIBER_COLUMN='$1'"
		EA=`mysql -B -h $SQL_HOST -u $RO_USER "-p$RO_PW" \
			-e "$QUERY ;" $SQL_DB|tail -n1`
		if [ $? -ne 0 ] ; then
			echo "MySql query failed"
			exit 1
		fi
		echo "Write email to $1: $EA now ..."
		mail -s "Message from $DOMAIN SIP admin" $EA
		if [ $? -eq 0 ] ; then
			echo message sent
		else
			echo sending message failed
		fi

		;;


	show)
		if [ $# -ne 1 -a $# -ne 2 ] ; then
			usage
			exit 1
		fi

		shift

		QUERY1="select $TABLE.$EMAIL_COLUMN from $TABLE where  $TABLE.$SUBSCRIBER_COLUMN='$1'"
		QUERY2="select $USRLOC.* from $USRLOC where $USRLOC.$USER_COLUMN='$1' order by expires desc"
		QUERY3="select $USRLOC.$USER_COLUMN, $TABLE.$EMAIL_COLUMN from $TABLE, $USRLOC where  \
			$TABLE.$SUBSCRIBER_COLUMN=$USRLOC.$USER_COLUMN" 

		if [ $# -eq 1 ] ; then
			mysql -h $SQL_HOST -u $RO_USER "-p$RO_PW" -e "$QUERY1 ;" $SQL_DB
			mysql -h $SQL_HOST -u $RO_USER "-p$RO_PW" -e "$QUERY2 ;" $SQL_DB
		else
			mysql -h $SQL_HOST -u $RO_USER "-p$RO_PW" -e "$QUERY3 ;" $SQL_DB
		fi

		;;

	rm)
        if [ $# -ne 2 ] ; then
            usage
            exit 1
        fi
        QUERY="delete from $TABLE where $TABLE.$SUBSCRIBER_COLUMN='$2'"
        mysql -h $SQL_HOST -u $SQL_USER "-p" -e "$QUERY ;" $SQL_DB
        ;;
			
	stat)
        if [ $# -ne 1 ] ; then
            usage
            exit 1
        fi
		ps -o "pid,user,args" $i -C $SER
		$0 show

		;;
		
	*)
		usage
		exit 1
		;;

esac

