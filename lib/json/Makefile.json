#
# This file is used to determine the compile flags for a module
# that uses json or json-c library
#

# json libs check
ifeq ($(JSONPATH),)
ifneq ("$(wildcard /usr/include/json-c/json.h)","")
DEFS += -I/usr/include/json-c
JSONLIB = json-c
else
DEFS += -I/usr/include/json
JSONLIB = json
endif
else
DEFS += -I$(JSONPATH)
endif

ifeq ($(CROSS_COMPILE),)
JSON_BUILDER := $(shell \
	if pkg-config --exists json 2> /dev/null; then \
		echo 'pkg-config json'; \
	elif pkg-config --exists json-c 2> /dev/null; then\
		echo 'pkg-config json-c'; \
	fi)

endif

ifeq ($(JSON_BUILDER),)
	DEFS += -I$(LOCALBASE)/include -I$(SYSBASE)/include
	LIBS += -L$(LOCALBASE)/lib -l$(JSONLIB)
else
	JSON_PKG_VER := $(shell $(JSON_BUILDER) --modversion)
	JSON_PKG_MAJOR := $(shell \
		ver_tmp=`echo '$(JSON_PKG_VER)' | cut -f1 -d.`; \
		if [ -z "$$ver_tmp" ]; then ver_tmp=0; fi; \
		echo "$$ver_tmp";)
	JSON_PKG_MINOR := $(shell \
		ver_tmp=`echo '$(JSON_PKG_VER)' | cut -f2 -d.`; \
		if [ -z "$$ver_tmp" ]; then ver_tmp=0; fi; \
		echo "$$ver_tmp";)
	JSON_PKG_MICRO := $(shell \
		ver_tmp=`echo '$(JSON_PKG_VER)' | cut -f3 -d.`; \
		if [ -z "$$ver_tmp" ]; then ver_tmp=0; fi; \
		echo "$$ver_tmp";)
	DEFS += $(shell $(JSON_BUILDER) --cflags) \
		-DJSON_PKG_MAJOR=$(JSON_PKG_MAJOR) \
		-DJSON_PKG_MINOR=$(JSON_PKG_MINOR) \
		-DJSON_PKG_MICRO=$(JSON_PKG_MICRO)
	LIBS += $(shell $(JSON_BUILDER) --libs)
endif

