<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
		<title>Overview</title>
		<para>
		This module provides functionality which allows to group users
		using a common field, in such a way that a particular group defines
		abbreviated codes for users, allowing closed dialing within the group,
		locating users by their abbreviated code, besides their 
		full identification. This module offers a functionality similar to
		Centrex.
		The relationship between users and their abbreviated codes, and their
		grouping is defined in a database table (see below).
		</para>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				A database module, like mysql, postgres or dbtext
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before 
		running &osips; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>None</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>

	<section>
	<title>Exported Parameters</title>

	<section>
		<title><varname>db_url</varname> (string)</title>
		<para>
		&url; of the database table to be used.
		</para>
		<para>
		<emphasis>
			Default value is 
			<quote>&defaultdb;</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>db_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "db_url", "mysql://username:password@dbhost/opensips")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>user_column</varname> (string)</title>
		<para>
		Column of the table which stores the username
		</para>
		<para>
		<emphasis>
			Default value is <quote>username</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>user_column</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "user_column", "user")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>domain_column</varname> (string)</title>
		<para>
		Column of the table which stores the domain associated to 
		usernames.
		</para>
		<para>
		<emphasis>
			Default value is <quote>domain</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>domain_column</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "domain_column", "domain")
...
</programlisting>
		</example>
	</section>


	<section>
		<title><varname>group_id_column</varname> (string)</title>
		<para>
		Column of the table which stores the group_id which groups
		the usernames.
		</para>
		<para>
		<emphasis>
			Default value is <quote>group_id</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>group_id_column</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "group_id_column", "groupid")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>cd_user_column</varname> (string)</title>
		<para>
		Column of the table which stores the closed dial code associated
		to a username.		
		</para>
		<para>
		<emphasis>
			Default value is <quote>cd_username</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>user_column</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "cd_user_column", "cd_user")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>cd_domain_column</varname> (string)</title>
		<para>
		Column of the table which stores the domain associated to closed dial
		usernames.
		</para>
		<para>
		<emphasis>
			Default value is <quote>cd_domain</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>cd_domain_column</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "cd_domain_column", "cddomain")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>new_uri_column</varname> (string)</title>
		<para>
		Column of the table which stores the new URI which will be used
		to rewrite the request, in case a possitive match be found.
		</para>
		<para>
		<emphasis>
			Default value is <quote>new_uri</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>new_uri_column</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "new_uri_column", "new_uri")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>use_domain</varname> (integer)</title>
		<para>
		 If enabled (set to non zero value) then domain will be used
		also used for searching new uri; otherwise only the
		username part will be used.
		</para>
		<para>
		<emphasis>
			Default value is <quote>0 (no)</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>use_domain</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("closeddial", "use_domain", 1)
...
</programlisting>
		</example>
	</section>
	</section>

	<section>
	<title>Exported Functions</title>
	<section>
		<title>
		<function moreinfo="none">cd_lookup(domain [, group])</function>
		</title>
		<para>
		This function is used to lookup in the database the corresponding URI
		for an abbreviated code dialed, according to group which From user
		belongs to. After finding the group for From user, the dialed code
		and found group are used to look for the new URI to rewrite the request.

		If a positive match is found, R-URI is rewritten; if no match is found,
		R-URI is not changed.
		</para>
		<para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
		<listitem>
			<para><emphasis>domain</emphasis>  
			Table where searching is going to be perfomed on.
			</para>
		</listitem>
		<listitem>
			<para><emphasis>group</emphasis> 
			Optional parameter which can be used to store the group to
			be used in searching. This group must be associated to From user.
			</para>
		</listitem>
		</itemizedlist>
		<para>
			Both of the parameters can contain pseudovariables.
		</para>
		<para>
		This function can be used from REQUEST_ROUTE and FAILURE_ROUTE.
		</para>
			
		<example>
		<title><function>cd_lookup</function> usage</title>
		<programlisting format="linespecific">
...

# Abbreviated code of two digits
if($(rU{s.len}) == 2)
{
        # Group AVP could be loaded at register time.
        $avp(group)="companyA";
        cd_lookup("closeddial", "$avp(group)");
};
...

# Abbreviated code of three digits
if($(rU{s.len}) == 3)
{
        # Group is searched on database, by using
        # From username.
        cd_lookup("closeddial");
};
...
</programlisting>
		</example>
	</section>
	</section>


	<section>
		<title>Installation</title>
		<para>
		A table needs to be created on the database to store relationship between
		usernames, their corresponding abbreviated codes and their grouping using
		group attribute.

		The SQL syntax to create the table can be found in closeddial-create.sql
		script at opensips/scripts folder.
		</para>
	</section>
</chapter>

