# This is a basic workflow to help you get started with Actions

name: Main CI

# Controls when the action will run.
on:
  # Triggers the workflow on all push or pull request events
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: true
    container:
      image: ubuntu:${{ matrix.os }}
    env:
      COMPILER: ${{ matrix.compiler }}
      BUILD_OS: ubuntu-${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [20.04, 22.04, 24.04]
        compiler: ['gcc', 'clang']
        include:
          - os: 20.04
            compiler: 'gcc-9'
          - os: 20.04
            compiler: 'gcc-10'
          - os: 20.04
            compiler: 'clang-9'
          - os: 20.04
            compiler: 'clang-10'
          - os: 22.04
            compiler: 'gcc-11'
          - os: 22.04
            compiler: 'gcc-12'
          - os: 22.04
            compiler: 'clang-11'
          - os: 22.04
            compiler: 'clang-12'
          - os: 22.04
            compiler: 'clang-13'
          - os: 22.04
            compiler: 'clang-14'
          - os: 22.04
            compiler: 'clang-15'
          - os: 24.04
            compiler: 'clang-16'
          - os: 24.04
            compiler: 'clang-17'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Install git
        run: |
          apt-get update
          apt-get install -y git lsb-release gnupg2 wget

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sh -x scripts/build/reset_sources.sh
          sh -x scripts/build/install_depends.sh

      - name: Build
        run: sh -x scripts/build/do_build.sh

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Notify slack fail
        if: failure() && github.repository == 'OpenSIPS/opensips'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: devel
          status: FAILED
          color: danger
