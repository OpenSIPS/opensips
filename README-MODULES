# $Id$

List of currently available ser modules
----------------------------------------------------------
Name	Use		 	 Maturity	Purpose/Depends on
(owner)
----------------------------------------------------------
acc		regular		 stable		transaction accounting
(jku)	/example				(the module servers also
							    as example of how to bind
								to transaction management)
								-tm

auth	regular		 stable		digest authentication
(jja)							-sl
								-mysql

cpl		experimental alpha		Call Processing Language
(bia)

ext		experimental alpha		Execution of external URI
(bia)							processing logic

exec	experimental beta		Execution of external URI
(jku)							processing logic

im		temporary	 alpha		Stateless instant messaging	
(bia)							client

jabber	experimental beta		SIP2Jabber gateway
(dcm)

maxfwd	regular		 stable		Max-Forwards check
(bia)

msilo	experimental beta		Message store
(dcm)							-tm
								-mysql

mysql	regular		 stable		supporting MySql interface
(jja)

pa		experimental alpha		presence agent
(jja)

pike	experimental alpha		excessive load detection
(bia)

print	example		 stable		Printing Message to stdout
(ape)

radius_acc exper.	beta		Reporting to radius server
(ssi)

radius_auth exper.  beta		Authentication by a radius server
(ssi)

registrar regular	stable		User Registrar
(jja)							-mysql, sl

rr		regular		 stable		Record-Routing
(jja)

sl		regular		 stable		Stateless Replies
(bia)

snmp	experimental alpha		SNMP Management
(rba)

sms		regular		 stable		SMS gateway
(bia)							-tm

textops regular		 stable		Message Textual Operations
(ape)

tm		regular		 beta		Transaction Management
(jku)

usrloc	regular		 stable		User Location
(jja)								-sl
								-mysql (optionally)


Use tells how deployable a module is. Regular indicates
we deploy and use this feature in our infrastructure.
Experimental tells we are still gaining operation experience.
Temporary labels modules which momentarily fix some
bugs/lacks and will disappear later. Example modules
are primarily useful as educational source code for
ser programmers.

Maturity is label as stable if a module has been deployed
for longer time, alpha if it is still being developed and
beta if it is under test.

Modules underway include presence server functionality,
firewall control, message store and more. If you are
interested in any of these or other modules, write us
to info@iptel.org.
