<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		<emphasis>RabbitMQ</emphasis>
		(<ulink url='http://www.rabbitmq.com/'>http://www.rabbitmq.com/</ulink>) 
		is an open source messaging server. It's purpose is to
		manage received messages in queues, taking advantage of
		the flexible AMQP protocol.
	</para>

	<para>
		This module provides the implementation of a RabbitMQ client for the
		Event Interface. It is used to send AMQP messages to a RabbitMQ server
		each time the Event Interface triggers an event subscribed for.
	</para>

	<para>
		The AMQP protocol is only used as the transport layer for notifications.
		The content of a message is presented in the next section.
	</para>
	</section>

	<section>
	<title>RabbitMQ events syntax</title>
	<para>
		The raised events will follow the following grammar:
		<itemizedlist>
			<listitem><para><emphasis>
			event = event_name (argument '\n')*
			</emphasis></para></listitem>
			<listitem><para><emphasis>
			event_name = non-quoted_string'\n'
			</emphasis></para></listitem>
			<listitem><para><emphasis>
			argument = ((arg_name '::')? arg_value)? | (arg_value)
			</emphasis></para></listitem>
			<listitem><para><emphasis>
			arg_name = not-quoted_string
			</emphasis></para></listitem>
			<listitem><para><emphasis>
			arg_value = not-quoted_string | '"' string '"'
			</emphasis></para></listitem>
			<listitem><para><emphasis>
			not-quoted_string = string - {',",\n,\r}
			</emphasis></para></listitem>
		</itemizedlist>
	</para>
	<para>The event name can contain any non-quoted string character, but
		it is recommended to follow the syntax:
		E_<emphasis>MODULE_NAME</emphasis>_<emphasis>EXTRA_NAME</emphasis>
	</para>
	</section>
	
	<section>
	<title>RabbitMQ socket syntax</title>
	<para>
		<para><emphasis>'rabbitmq:' [user[':'password] '@' host [':' port] '/' [exchange '?'] routing_key</emphasis></para>
	</para>
	<para>
		Meanings:
		<itemizedlist>
			<listitem><para>
					<emphasis>'rabbitmq:'</emphasis> - informs the Event Interface that the
					events sent to this subscriber should be handled by the
					<emphasis>event_rabbitmq</emphasis> module.
			</para>	</listitem>
			<listitem><para>
					<emphasis>user</emphasis> - username used for RabbitMQ server
					authentication. The default value is 'guest'.
			</para>	</listitem>
			<listitem><para>
					<emphasis>password</emphasis> - password used for RabbitMQ server
					authentication. The default value is 'guest'.
			</para>	</listitem>
			<listitem><para>
					<emphasis>host</emphasis> - host name of the RabbitMQ server.
			</para>	</listitem>
			<listitem><para>
					<emphasis>port</emphasis> - port of the RabbitMQ server. The
					default value is '5672'.
			</para>	</listitem>
			<listitem><para>
					<emphasis>exchange</emphasis> - exchange of the RabbitMQ server. The
					default value is ''.
			</para>	</listitem>
			<listitem><para>
					<emphasis>routing_key</emphasis> - this is the routing key
					used by the AMQP protocol and it is used to identify the queue
					where the event should be sent.
					<para>NOTE: if the queue does not exist, this module will not 
						try to create it.</para>
			</para>	</listitem>
		</itemizedlist>
	</para>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>No dependencies on other &osips; modules</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before 
		running &osips; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>librabbitmq-dev</emphasis>
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>

	<section>
	<title>Exported Parameters</title>
	<section>
		<title><varname>heartbeat</varname> (integer)</title>
		<para>
			Enables heartbeat support for the AMQP communication. If the
			client does not receive a heartbeat from server within the
			specified interval, the socket is automatically closed by the
			rabbitmq-client. This prevents OpenSIPS from blocking while
			waiting for a response from a dead rabbitmq-server. The value
			represents the heartbit interval in seconds.
		</para>
		<para>
		<emphasis>
			Default value is <quote>0 (disabled)</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>heartbeat</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("event_rabbitmq", "heartbeat", 3)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>sync_mode</varname> (integer)</title>
		<para>
			Specifies whether an event raise operates synchronous or asynchronous relative to the process where the raise is triggered.In synchronous mode the process waits for the status of the raise from the actual worker process.In asynchronous mode the process continues its operation without receiving any confirmation.
		</para>
		<para>
		<emphasis>
			Default value is <quote>0 (asynchronous)</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>sync_mode</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("event_rabbitmq", "sync_mode", 1)
...
</programlisting>
		</example>
	</section>
	</section>

	<section>
	<title>Exported Functions</title>
		<para>
		No function exported to be used from configuration file.
		</para>
	</section>

	<section>
	<title>Example</title>
		<para>
			This is an example of an event raised by the pike module
			when it decides an ip should be blocked:
		</para>
		<example>
		<title>E_PIKE_BLOCKED event</title>
		<programlisting format="linespecific">

	E_PIKE_BLOCKED
	ip::192.168.2.11

</programlisting>
		</example>

		<example>
		<title>RabbitMQ socket</title>
		<programlisting format="linespecific">

	rabbitmq:guest:guest@127.0.0.1:5672/pike

	# same socket can be written as
	rabbitmq:127.0.0.1/pike

</programlisting>
		</example>

	</section>
	<section>
		<title>Installation and Running</title>
	<section>
		<title>&osips; config file</title>
		<para>
			This configuration file presents the usage of the event_rabbitmq
			module. In this scenario, a message is sent to a RabbitMQ server
			everytime &osips; receives a MESSAGE request. The parameters 
			passed to the server are the R-URI username and the message
			body.
		</para>
		<example>
			<title>&osips; config script - sample event_rabbitmq usage</title>
			<programlisting format="linespecific">
...
&rabbitmqcfg;
...
</programlisting>
		</example>
		</section>
	</section>
</chapter>

