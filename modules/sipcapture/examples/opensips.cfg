

####### Global Parameters #########

log_level=3
log_stderror=no
log_facility=LOG_LOCAL0
children=5


/* uncomment the following lines to enable debugging */
#debug_mode=yes

/* uncomment the next line to disable TCP (default on) */
disable_tcp=yes

# default db_url to be used by modules requiring DB connection
db_default_url="mysql://opensips:opensipsrw@localhost/opensips"

/* uncomment and configure the following line if you want opensips to 
   bind on a specific interface/port/proto (default bind on all available) */
listen=udp:10.0.130.41:5060

####### Modules Section ########

#set module path
mpath="/usr/local/lib64/opensips/modules/"

loadmodule "db_mysql.so"
loadmodule "sipcapture.so"

####### Routing Logic ########
modparam("sipcapture", "db_url", "mysql://homer_user:homer_password@localhost/homer_data")
modparam("sipcapture", "capture_on", 1)
/* activate HEP capturing */
modparam("sipcapture", "hep_capture_on", 1)
/* IP to listen*/
#modparam("sipcapture", "raw_socket_listen", "10.0.130.41:5060-6000")
modparam("sipcapture", "raw_interface", "eth0")
/* activate IPIP capturing */
modparam("sipcapture", "raw_ipip_capture_on", 0)
/* activate monitoring port capturing */
modparam("sipcapture", "raw_moni_capture_on", 0)
/* My table name*/
modparam("sipcapture", "table_name", "sip_capture")
modparam("sipcapture", "raw_sock_children", 4)
/* Promiscious mode */
modparam("sipcapture", "promiscious_on", 1)

####### Routing Logic ########


# main request routing logic

# Main SIP request routing logic
# - processing of any incoming SIP request starts with this route
route {

        #For example, you can capture only needed methods...
        #if (method =~ "^(INVITE|UPDATE|NOTIFY|SUBSCRIBE|OPTIONS|REGISTER)") {
                sip_capture();
        #}
        exit;
}

onreply_route {

        #And only needed reply or needed requests method
        #if(status =~ "^(1[0-9][0-9]|[3[0-9][0-9]|4[0-9]|[56][0-9][0-9])") {
        #if($rm =~ "^(INVITE|UPDATE|NOTIFY|SUBSCRIBE|OPTIONS|REGISTER)") {
                sip_capture();
        #}
        exit;
}
