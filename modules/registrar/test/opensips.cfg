log_level = 2
stderror_enabled=yes
syslog_enabled=no

#memdump = 2
udp_workers = 4

auto_aliases = no
enable_asserts = true
abort_on_assert = true
max_while_loops = 10000

listen = udp:localhost:5059

####### Modules Section ########

mpath = "modules/"

loadmodule "proto_udp.so"
loadmodule "mi_fifo.so"

################################

loadmodule "tm.so"
modparam("tm", "auto_100trying", 0)

loadmodule "signaling.so"
loadmodule "registrar.so"
loadmodule "event_routing.so"

modparam("registrar", "pn_enable", true)
modparam("registrar", "pn_providers", "fcm, apns")
modparam("registrar", "pn_ct_match_params", "pn-provider, pn-prid, pn-param")
modparam("registrar", "pn_trigger_interval", 50)
modparam("registrar", "pn_skip_pn_interval", 0)
modparam("registrar", "pn_refresh_timeout", 2)

loadmodule "usrloc.so"
modparam("usrloc", "contact_refresh_timer", true)

route {
	/* pre-register the 'location' udomain (must be done at mod_init()) */
	save("location");
}

event_route [E_UL_CONTACT_REFRESH]
{
	xlog("===== $param(domain) | E_UL_CONTACT_REFRESH (must send PN) ==========\n");
	xlog("    provider: '$(param(uri){uri.param,pn-provider})'\n");
	xlog("    prid: '$(param(uri){uri.param,pn-prid})'\n");
	xlog("    param: '$(param(uri){uri.param,pn-param})'\n");
}
