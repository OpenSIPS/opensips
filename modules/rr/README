#
# $Id$
#
# Route & Record-Route module
#

Module depends on: None


Exported Parameters:
-------------------

Name:    enable_full_lr
Type:    int
Default: 0 (no)
Desc:    If set to 1 then ;lr=on instead of just ;lr will be
         used. This is to overcome problems with broken UAs which
	 strip ;lr parameter when generating Route header fields
	 from Record-Route (;lr=on seems to help).

Name:	 append_fromtag
Type:	 int
Default: 1 (yes)
Desc:	 if turned on, request's from-tag is appended to 
         record-route; that's useful for understanding whether
	 subsequent requests (such as BYE) come from caller
	 (route's from-tag==BYE's from-tag) or callee
	 (route's from-tag==BYE's to-tag)

Name:    enable_double_rr
Type:    int
Default: 1 (yes)
Desc:    There are some situations when the server needs to insert
         two Record-Route header fields instead of one. For example
	 when using two disconnected networks or doing cross-protocol
	 forwarding from UDP->TCP. This parameter enables inserting of
	 2 Record-Routes. The server will later remove both of them.


Exported Functions:
------------------

Name:   loose_route
Params: -
Desc:   The function performs loose routing as defined in RFC3261.
	See the RFC for more details.


Name:   strict_route - deprecated
Params: -
Desc:   If there are any Route HFs in the message, the function
        takes the first one, rewrites Request-URI with it's value
        and removes the first URI from Route HFs.


Name:   record_route
Params: -
Desc:   The function adds a new Record-Route header field. The
        header field will be inserted in the message before any
        other Record-Route header fields.

Name:   record_route_preset
Params: string - String to be put into RR
Desc:   This function will put the string into RR, don't use
        unless you know what you are doing
