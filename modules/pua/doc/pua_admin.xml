<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		This module offer the functionality of a presence user agent client,
		sending Subscribe and Publish messages. 
	</para>
	<para>
		 Now it can be used with the following modules: pua_mi and pua_usrloc,
		 pua_bla and pua_xmpp.
		 The pua_mi offer the possibility to publish any kind of information
		 or subscribing to a resource through fifo. The pua_usrloc module calls
		 a function exported by pua modules to publish elementary presence
		 information, such as basic status "open" or "closed", for clients that
		 do not implement client-to-server presence.
		 Through pua_bla , BRIDGED LINE APPEARANCE features are added to OpenSIPs.
		 The pua_xmpp module represents a gateway between SIP and XMPP, so that 
		 jabber and SIP clients can exchange presence information. 
	</para>
	<para>
		The module use cache to store presentity list and writes to database
		on timer to be able to recover upon restart.
	</para>
	<para>
		Notice: This module must not be used in no fork mode (the locking mechanism
		used may cause deadlock in no fork mode).
	</para>
	</section>
		<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>a database modules</emphasis>.
			</para>
			</listitem>
			<listitem>
			<para>
				<emphasis>tm</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before running
		&osips; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>libxml</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>
	<section>
	<title>Exported Parameters</title>
	<section>
		<title><varname>hash_size</varname> (int)</title>
		<para>
		The size of the hash table used for storing Subscribe and 
		Publish information. 
        This parameter will be used as the power of 2 when computing table size.
        </para>
		<para>
		<emphasis>Default value is <quote>9</quote>.	
		</emphasis>
		</para>
		<example>
		<title>Set <varname>hash_size</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("pua", "hash_size", 11)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>db_url</varname> (str)</title>
		<para>
		Database url.
		</para>
		<para>
		<emphasis>Default value is <quote>>&defaultdb;</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>db_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("pua", "db_url" "&exampledb;")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>db_table</varname> (str)</title>
		<para>
		The name of the database table.
		</para>
		<para>
		<emphasis>Default value is <quote>pua</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>db_table</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("pua", "db_table", "pua")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>min_expires</varname> (int)</title>
		<para>
		The inferior expires limit for both Publish and Subscribe.
		</para>
		<para>
		<emphasis>Default value is <quote>300</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>min_expires</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("pua", "min_expires", 0)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>default_expires</varname> (int)</title>
		<para>
		The default expires value used in case this information is not provisioned.
		</para>
		<para>
		<emphasis>Default value is <quote>3600</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>default_expires</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("pua", "default_expires", 3600)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>update_period</varname> (int)</title>
		<para>
		The interval at which the information in database and hash table
		should be updated. In the case of the hash table updating is 
		deleting expired messages.
		</para>
		<para>
		<emphasis>Default value is <quote>30</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>update_period</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("pua", "update_period", 100)
...
</programlisting>
		</example>
	</section>
	</section>

<section>
	<title>Exported Functions</title>
		
	<section>
		<title>
		<function moreinfo="none">pua_update_contact()</function>
		</title>
		<para>
		The remote target can be updated by the Contact of a subsequent in
		dialog request. In the PUA watcher case (sending a SUBSCRIBE messages),
		this means that the remote target for the following Subscribe messages
		can be updated at any time by the contact of a Notify message. 
		If this function is called on request route on receiving a Notify
		message, it will try to update the stored remote target.
		</para>
		<para>
		This function can be used from REQUEST_ROUTE.
		</para>
		<para>
		<emphasis>Return code:</emphasis>
		<itemizedlist>
			<listitem>
			<para>
				<emphasis> 1 - if success</emphasis>.
			</para>
			</listitem>
			<listitem>
			<para>
				<emphasis> -1 - if error</emphasis>.
			</para>
			</listitem>
		</itemizedlist>
		</para>
	
		<example>
		<title><function>pua_update_contact</function> usage</title>
		<programlisting format="linespecific">
...
if(method=="NOTIFY")
    pua_update_contact();
...
</programlisting>
		</example>
	</section>
</section>


<section>
	<title>Installation</title>
	<para>
	The module requires 1 table in OpenSIPS database: pua. The SQL 
	syntax to create it can be found in presence_xml-create.sql     
	script in the database directories in the opensips/scripts folder.
	You can also find the complete database documentation on the
	project webpage, &osipsdbdocslink;.
	</para>
</section>


</chapter>

