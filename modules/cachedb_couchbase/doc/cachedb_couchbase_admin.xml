<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		This module is an implementation of a cache system designed to work with a 
		Couchbase server. It uses the libcouchbase client library to connect to the
		server instance,
		It uses the Key-Value interface exported from the core.
	</para>
	<para>
	</para>
	</section>


	<section>
	<title>Advantages</title>
	<para>
		<itemizedlist>
			<listitem>
			<para>
				<emphasis>memory costs are no longer on the server
				</emphasis>
			</para>
			</listitem>

			<listitem>
			<para>
				<emphasis>many servers can be used inside a cluster, so the memory
				is virtually unlimited</emphasis>
			</para>
			</listitem>

			<listitem>
			<para>
				<emphasis>the cache is 100% persistent. A restart
					of OpenSIPS server will not affect the DB. The CouchBase DB is also
				persistent so it can also be restarted without loss of information.</emphasis>
			</para>
			</listitem>

			<listitem>
			<para>
				<emphasis>CouchBase is an open-source project so
				it can be used to exchange data
				 with various other applications</emphasis>
			</para>
			</listitem>

			<listitem>
			<para>
				<emphasis>By creating a CouchBase Cluster, multiple OpenSIPS
				instances can easily share key-value information</emphasis>
			</para>
			</listitem>

		</itemizedlist>
	</para>
	<para>
	</para>
	</section>

	<section>
	<title>Limitations</title>
	
		
		<para>
			<itemizedlist>
			<listitem>
			<para>
			<emphasis>
		keys (in key:value pairs) may not contain spaces or control characters
		</emphasis>
			</para>
			</listitem>

		</itemizedlist>
		</para>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		None.
		</para>
	</section>
	
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before running
		&osips; with this module loaded:
		</para>
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>libcouchbase >= 2.0:</emphasis>
			</para>
			
			<para>
				libcoucbase can be downloaded from http://www.couchbase.com/develop/c/current
			</para>
			
			</listitem>
			</itemizedlist>
	</section>
	</section>
	
	<section>
		<title>Exported Parameters</title>
		<section>
		<title><varname>cachedb_url</varname> (string)</title>
		<para>
			The urls of the server groups that OpenSIPS will connect to in order
			to use the from script cache_store,cache_fetch, etc operations.
			It can be set more than one time.
			The prefix part of the URL will be the identifier that will be used
			from the script.
			The format of the URL is
			couchbase[:identifier]://[username:password@]IP:Port/bucket_name
		</para>
		
		<example>
		<title>Set <varname>cachedb_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("cachedb_couchbase", "cachedb_url","couchbase:group1://localhost:6379/default");
modparam("cachedb_couchbase", "cachedb_url","couchbase:cluster1://random_url:8888/my_bucket");
#Multiple hosts
modparam("cachedb_couchbase", "cachedb_url","couchbase:cluster1://random_url1:8888;random_url2:8888;random_url3:8888/my_bucket");
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>timeout</varname> (int)</title>
		<para>
			The max duration in microseconds that a couchbase op is expected to last.
			Default is 3000000 ( 3 seconds )
		</para>
		
		<example>
		<title>Set <varname>timeout</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("cachedb_couchbase", "timeout",5000000);
...
	</programlisting>
		</example>
	</section>
		<section>
		<title><varname>exec_threshold</varname> (int)</title>
		<para>
			The maximum number of microseconds that a couchbase query can last.
			Anything above the threshold will trigger a warning message to the log
		</para>
		<para>
		<emphasis>Default value is <quote>0 ( unlimited - no warnings )</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>exec_threshold</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("cachedb_couchbase", "exec_threshold", 100000)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>lazy_connect</varname> (int)</title>
		<para>
			Delay connecting to a bucket until the first time it is used.
			Connecting to many buckets at startup can be time consuming. This option allows for
			faster startup by delaying connections until they are needed.
			This option can be dangerous for untested bucket configurations/settings. Always test
			first without lazy_connect.
			This option will show errors in the log during the first access made to a bucket.
			Default is 0 ( Connect to all buckets on startup )
		</para>
		
		<example>
		<title>Set <varname>lazy_connect</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("cachedb_couchbase", "lazy_connect", 1);
...
	</programlisting>
		</example>
	</section>
		
		<example>
		<title>Use CouchBase servers </title>
		<programlisting format="linespecific">
...
cache_store("couchbase:group1","key","$ru value");
cache_fetch("couchbase:cluster1","key",$avp(10));
cache_remove("couchbase:cluster1","key");
...
	</programlisting>
		</example>
	

	<section>
		<title>Exported Functions</title>
		<para>The module does not export functions to be used
		in configuration script.</para>
	</section>	
</section>

</chapter>

