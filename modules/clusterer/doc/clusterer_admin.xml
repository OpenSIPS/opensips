<!-- Module User's Guide -->

<chapter>

	<title>&adminguide;</title>

	<section>
	<title>Overview</title>
	<para> The <emphasis>clusterer</emphasis> module is used to organize
		multiple &osips; instances into groups that can communicate with each
		other in order to replicate, share information or perform
		distributed tasks. The module itself only stores information about the
		nodes in a group/cluster and provides an interface to check or tune
		their state and parameters. The distributed logic is performed by
		different modules that use this interface (i.e. the
		<emphasis>dialog</emphasis> module can replicate profiles, the
		<emphasis>ratelimit</emphasis> module can share pipes across multiple
		instances, etc). Provisioning the nodes within a cluster is done over
		the database but, for efficiency, the node-related information is cached
		into &osips; memory. This information can be checked or updated by
		sending commands over the MI interface.
	</para>
	<para>
		The <emphasis>clusterer</emphasis> module can also detect node
		availability, by using certain parameters provisioned in the database.
		When a destination is not reachable, it is put in a
		<emphasis>probing</emphasis> state - it is periodically pinged until
		a maximum number of failed attempts is reached, when it is marked as
		temporarily disabled. It stays in this state for a period (equal to the
		<emphasis>duration</emphasis> parameter), and then the number of
		retries reset to 0 and the node is considered up again.
	</para>
	<para>
		Modules (like <emphasis>dialog</emphasis> or
		<emphasis>ratelimit</emphasis> can use nodes within the cluster to
		replicate information. They also register a specific timeout to
		invalidate data from specific nodes, in case no updates have been
		within an interval. The <emphasis>clusterer</emphasis> notifies
		the module if the timeout is reached and puts the node in a
		temporary disabled state.
		If a packet has arrived for a temporary disabled server, the packet
		is dropped and a temporary disabled notification is sent to the
		registered module. After the disabled period (2 * timeout) has passed,
		the server is up again.
	</para>
	<para>
		By default, the state information of the nodes is not persistent. To
		make them persistent via a database, one must set the
		<emphasis>persistent_mode</emphasis> parameter.
	</para>
	</section>

        <section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
                    <itemizedlist>
			<listitem>
			<para>
				<emphasis>a database module</emphasis>.
			</para>
			</listitem>
                    </itemizedlist>
		</para>
	</section>

        <section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before
		running &osips; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>None</emphasis>.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>

        <section>
	<title>Exported Parameters</title>
	<section>
            <title><varname>db_url</varname></title>
		<para>
		The database url.
		</para>
		<para>
		<emphasis>
			Default value is <quote>NULL</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>db_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "db_url",
	"mysql://opensips:opensipsrw@localhost/opensips")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>db_table</varname></title>
            <para>
                The name of the table storing the clustering information.
            </para>
            <para>
		<emphasis>
			Default value is <quote>clusterer</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>db_table</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "db_table", "clusterer")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>server_id</varname></title>
            <para>
				It specifies the <emphasis>server_id</emphasis> the current
				instance has. this field should correspond with one of the
				<emphasis>machine_id</emphasis> fields in the database.
			</para>
            <para>
		<emphasis>
			Default value is 0.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>server_id</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "server_id", 2)
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>persistent_mode</varname></title>
            <para>
				If persistent mode is enabled, a timer synchronizes the
				information used by the clusterer module and the information
				stored in the database.
            </para>
            <para>
		<emphasis>
			Default value is 0 (disabled).
		</emphasis>
            </para>
            <example>
		<title>Set <varname>persistent_mode</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "persistent_mode", 1)
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>cluster_id_col</varname></title>
            <para>
                The name of the column in the db_table where the cluster_id is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>cluster_id</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>cluster_id_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "cluster_id_col", "cluster_id")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>machine_id_col</varname></title>
            <para>
                The name of the column in the db_table where the machine_id is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>machine_id</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>machine_id_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "machine_id_col", "machine_id")
...
</programlisting>
		</example>
        </section>

           <section>
            <title><varname>clusterer_id_col</varname></title>
            <para>
                The name of the column in the db_table where the machine_id is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>id</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>clusterer_id_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "clusterer_id_col", "clusterer_id")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>state_col</varname></title>
            <para>
                The name of the column in the db_table where the state is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>state</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>state_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "state_col", "state")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>url_col</varname></title>
            <para>
                The name of the column in the db_table where the url is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>url</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>url_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "url_col", "url")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>description_col</varname></title>
            <para>
                The name of the column in the db_table where the machine's description is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>description</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>description_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "description_col", "description")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>failed_attempts_col</varname></title>
            <para>
                The name of the column in the db_table where the maximum allowed number
                of failed attempts is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>failed_attempts</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>failed_attempts_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "failed_attempts_col", "failed_attempts")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>last_attempt_col</varname></title>
            <para>
                The name of the column in the db_table where the UNIX time of last
                last failed attempt is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>last_attempt</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>last_attempt_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "last_attempt_col", "last_attempt")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>duration_col</varname></title>
            <para>
                The name of the column in the db_table where the duration of a
                machine belonging to a certain cluster temporary disabled state
                is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>duration</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>duration_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "duration_col", "duration")
...
</programlisting>
		</example>
        </section>

        <section>
            <title><varname>no_tries_col</varname></title>
            <para>
                The name of the column in the db_table where the number of failed
                connecting tries is stored.
            </para>
            <para>
		<emphasis>
			Default value is <quote>no_tries</quote>.
		</emphasis>
            </para>
            <example>
		<title>Set <varname>no_tries_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("clusterer", "no_tries_col", "no_tries")
...
</programlisting>
		</example>
        </section>
        </section>

        <section>
	<title>Exported Functions</title>
	<para>none</para>
        </section>

        <section>
	<title>Exported MI Functions</title>
	<section>
		<title>
		<function moreinfo="none">clusterer_reload</function>
		</title>
		<para>
                    Reloads data from the clusterer database. If the persistent
                    mode is disabled the changes made to the locally stored
                    data are lost.
		</para>
		<para>
		Name: <emphasis>clusterer_reload</emphasis>
		</para>
		<para>Parameters:<emphasis>none</emphasis> </para>
 		<para>
		MI FIFO Command Format:
		</para>
		<programlisting  format="linespecific">
		:clusterer_reload
		_empty_line_
		</programlisting>
	</section>

        <section>
		<title>
		<function moreinfo="none">clusterer_list</function>
		</title>
		<para>
			Lists in a table format all the data stored in &osips; cache.
		</para>
		<para>
		Name: <emphasis>clusterer_list</emphasis>
		</para>
		<para>Parameters:<emphasis>none</emphasis> </para>
 		<para>
		MI FIFO Command Format:
		</para>
		<programlisting  format="linespecific">
		:clusterer_list
		_empty_line_
		</programlisting>
	</section>

        <section>
		<title>
		<function moreinfo="none">clusterer_set_status</function>
		</title>
		<para>
                Sets the status(UP, DOWN) of a machine belonging to a certain cluster.
                </para>
		<para>
		Name: <emphasis>clusterer_set_status</emphasis>
		</para>
		<para>Parameters:</para>
		<itemizedlist>
			<listitem><para>
			<emphasis>cluster_id</emphasis> - indicates the id of the cluster.
			</para></listitem>
                        <listitem><para>
			<emphasis>machine_id</emphasis> - indicates the id of the machine.
			</para></listitem>
                        <listitem><para>
			<emphasis>status</emphasis> - indicates the new status( 0 - permanent down, 1 - up).
			</para></listitem>
                        <listitem><para>
			<emphasis>protocol</emphasis> - indicates the protocol.
			</para></listitem>
		</itemizedlist>
 		<para>
		MI FIFO Command Format:
		</para>
		<programlisting  format="linespecific">
		:clusterer_set_status:
		1
		2
		0
		bin
		_empty_line_
		</programlisting>
	</section>

        </section>

<section>
	<title>Usage Example</title>
	<para> This section provides an usage example for replicating ratelimit
		pipes between two &osips; instances. It uses the clusterer module to
		manage the replicating nodes, and the proto_bin modules to send the
		replicated information.
	</para>
	<para> The setup topology is simple: we have two &osips; nodes running on
		two separate machines (although they could run on the same machine as
		well): <emphasis>Node A</emphasis> has IP 192.168.0.5 and
		<emphasis>Node B</emphasis> has IP 192.168.0.6. Both have, besides the
		traffic listeners (UDP, TCP, etc.), bin listeners bound on port
		<emphasis>5566</emphasis>. These listeners will be used by the
		<emphasis>ratelimit</emphasis> module to replicate the pipes.
		Therefore, we have to provision them in the
		<emphasis>clusterer</emphasis> table.
	</para>
	<example>
		<title>Example database content - clusterer table</title>
		<programlisting format="linespecific">
+----+------------+------------+----------------------+-------+--------------+-----------------+----------+----------+-------------+
| id | cluster_id | machine_id | url                  | state | last_attempt | failed_attempts | no_tries | duration | description |
+----+------------+------------+----------------------+-------+--------------+-----------------+----------+----------+-------------+
|  1 |          1 |          1 | bin:192.168.0.5:5566 |     1 |            0 |               0 |        0 |       30 | Node A      |
|  2 |          1 |          2 | bin:192.168.0.6:5566 |     1 |            0 |               0 |        0 |       30 | Node B      |
+----+------------+------------+----------------------+-------+--------------+-----------------+----------+----------+-------------+
		</programlisting>
	</example>
	<para>
		<itemizedlist>
			<listitem>
				<para><quote>cluster_id</quote> - this column represents the
					identifier of the cluster. All nodes within a
					group/cluster should have the same id (in our example,
					both nodes have ID <emphasis>1</emphasis>)
				</para>
			</listitem>
			<listitem>
				<para><quote>machine_id</quote> - this represents the
					identifier of the machine/node, and each instance within a
					cluster should have a different ID. In our example,
					<emphasis>Node A</emphasis> will have ID 1, and
					<emphasis>Node B</emphasis> ID 2
				</para>
			</listitem>
			<listitem>
				<para><quote>url</quote> - this indicates the URL where the
					instance will receive the replication information. In our
					example, each node will receive the date over the bin
					protocol
				</para>
			</listitem>
			<listitem>
				<para><quote>state</quote> - this is the state of the machine:
					1 means on, 0 means off, and 2 means it is in probing.
					Note that if you want the node to be active right away,
					you have to set it in <emphasis>state 1</emphasis>
				</para>
			</listitem>
			<listitem>
				<para><quote>last_attempt</quote>,
					<quote>failed_attempts</quote> and <quote>no_tries</quote>
					- are fields used for the probing mechanisms, and should
					be set to <emphasis>0</emphasis> by default. They are
					automatically updated by the clusterer module if the
					<emphasis>persistent_mode</emphasis> parameter is set to
					<emphasis>1</emphasis>
				</para>
			</listitem>
			<listitem>
				<para><quote>duration</quote> - is used to specify the period
					a node stays in the temporary disabled state. In our
					example, if the node does not respond, it is disabled for
					30 seconds before retrying to send data again
				</para>
			</listitem>
			<listitem>
				<para><quote>description</quote> - is an opaque value used to
					identify the node
				</para>
			</listitem>
		</itemizedlist>
	</para>
	<para>
		After provisioning the two nodes in the database, we have to configure
		the two instances of &osips;. First, we configure <emphasis>Node
			A</emphasis>:
	</para>
	<example>
		<title><emphasis>Node A</emphasis> configuration</title>
		<programlisting format="linespecific">
...
listen = bin:192.168.0.5:5566 # bin listener for Node A

loadmodule "proto_bin.so"

loadmodule "clusterer.so"
modparam("clusterer", "db_url", "mysql://opensips@192.168.0.7/opensips")
modparam("clusterer", "server_id", 1) # machine_id for Node A

loadmodule "ratelimit.so"
# replicate pipes to cluster id 1
modparam("ratelimit", "replicate_pipes_to", 1)
# accept replicated data from nodes within cluster 1
modparam("ratelimit", "accept_pipes_from", 1)
# if a node does not reply in a 5 seconds interval,
#the information from that node is invalidated
modparam("ratelimit", "accept_pipes_timeout", 5)
...
		</programlisting>
	</example>
	<para>
		Similarly, the configuration for <emphasis>Node B</emphasis> is as follows:
	</para>
	<example>
		<title><emphasis>Node B</emphasis> configuration</title>
		<programlisting format="linespecific">
...
listen = bin:192.168.0.6:5566 # bin listener for Node B

loadmodule "proto_bin.so"

loadmodule "clusterer.so"
# ideally, use the same database for both nodes
modparam("clusterer", "db_url", "mysql://opensips@192.168.0.7/opensips")
modparam("clusterer", "server_id", 2) # machine_id for Node B

loadmodule "ratelimit.so"
# replicate pipes to cluster id 1
modparam("ratelimit", "replicate_pipes_to", 1)
# accept replicated data from nodes within cluster 1
modparam("ratelimit", "accept_pipes_from", 1)
# if a node does not reply in a 5 seconds interval,
# the information from that node is invalidated
modparam("ratelimit", "accept_pipes_timeout", 5)
...
		</programlisting>
	</example>
</section>

<para>
	<emphasis>Note</emphasis> that the <emphasis>server_id</emphasis>
	parameter for <emphasis>Node B</emphasis> is <emphasis>2</emphasis>.
	Starting the two &osips; instances with the above configurations provides
	your platform the ability to used shared ratelimit pipes in a very
	efficient and scalable way.
</para>

</chapter>
