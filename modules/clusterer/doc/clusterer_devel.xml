<!-- Module Developer's Guide -->

<chapter>
	
	<title>&develguide;</title>
	<section>
	<title>Available Functions</title>
        
        <section id="get-nodes-id">
		<title>
		<function moreinfo="none">get_nodes(cluster_id, proto)</function>
		</title>
		<para>
                The function will return all a copy of all the needed information
                from the nodes (machine_id, state, description, sock address)
                stored in shm, whos state is up(1) and have a certain cluster_id and
                protocol.
		</para>
		<para>
		This function is usually used for replication purposes. 
		</para>
		<para>
		This function returns NULL on error.
		</para>
                <para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
                    <listitem>
                        <para><emphasis>int cluster_id</emphasis> - the cluster id
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int proto</emphasis> - the protocol
                        </para>
                    </listitem>
                </itemizedlist>
                <example>
		<title><function>get_nodes</function> usage</title>
		<programlisting format="linespecific">
...
get_nodes(cluster_id, proto);
...
</programlisting>
		</example>
	</section>
        
        <section id="free-nodes-id">
		<title>
		<function moreinfo="none">free_nodes(nodes)</function>
		</title>
		<para>
                This function will free the allocated data for the copy.
		</para>
                <para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
                    <listitem>
                        <para><emphasis>clusterer_node_t *nodes</emphasis> - the data
                        returned by the get_nodes function
                        </para>    
                    </listitem>
                </itemizedlist>
		<example>
		<title><function>free_nodes</function> usage</title>
		<programlisting format="linespecific">
...
free_nodes(nodes);
...
</programlisting>
		</example>
	</section>
        
        <section id="set-state-id">
		<title>
		<function moreinfo="none">set_state(cluster_id, machine_id, state, proto)</function>
		</title>
		<para>
                The function sets the state of a machine belonging to a certain cluster,
                which have the specified protocol.
		</para>
		<para>
		This function is usually used for replication purposes. 
		</para>
                <para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
                    <listitem>
                        <para><emphasis>int cluster_id</emphasis> - cluster_id
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int machine_id</emphasis> - machine_id
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int state</emphasis> - the server state
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int proto</emphasis> - protocol
                        </para>    
                    </listitem>
                </itemizedlist>
		<example>
		<title><function>set_state</function> usage</title>
		<programlisting format="linespecific">
...
set_state(1,1,2,PROTO_BIN);
...
</programlisting>
		</example>
	</section>

        <section id="check">
		<title>
		<function moreinfo="none">check(cluster_id, sockaddr, server_id, proto)</function>
		</title>
		<para>
                This function is used to check if the source of a receiving packet
                is known. 
		</para>
		<para>
		It returns 1 if the source is known, else it returns 0.
		</para>
                <para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
                    <listitem>
                        <para><emphasis>int cluster_id</emphasis> - cluster id
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>union sockaddr_union* sockaddr</emphasis> - incoming connexion
                        socket address
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int server_id</emphasis> - incoming connexion
                        server_id
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int proto</emphasis> - protocol
                        </para>    
                    </listitem>
                </itemizedlist>
		<example>
		<title><function>check</function> usage</title>
		<programlisting format="linespecific">
...
check(1, sockaddr, 2, PROTO_BIN)
...
</programlisting>
		</example>
	</section>

        <section id="get-my-id-id">
		<title>
		<function moreinfo="none">get_my_id()</function>
		</title>
		<para>
                This function will return the server id's.
		</para>
		<example>
		<title><function>get_my_id</function> usage</title>
		<programlisting format="linespecific">
...
get_my_id()
...
</programlisting>
		</example>
	</section>

         <section id="send-to-id">
		<title>
		<function moreinfo="none">send_to(cluster_id, protocol)</function>
		</title>
		<para>
                This function will replicate information to the nodes belonging to 
                a cluster_id that have a specific protocol.
		</para>
                <para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
                    <listitem>
                        <para><emphasis>int cluster_id</emphasis> - cluster_id
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int protocol</emphasis> - protocol
                        </para>    
                    </listitem>
                </itemizedlist>
		<example>
		<title><function>send_to</function> usage</title>
		<programlisting format="linespecific">
...
send_to(cluster_id, protocol)
...
</programlisting>
		</example>
	</section>
        
         <section id="register_module-id">
		<title>
		<function moreinfo="none">register_module(module_name, protocol, callback_function, timeout, auth_check, cluster_id)</function>
		</title>
		<para>
                This function registers a module to a certain protocol. It acts like an
                intermediary: when a valid packet has arrived, if the auth_check parameter is specified
                then it is checked for authenticity. After that, the timestamps are updated and the callback
                function from the registered module is called.
                The clusterer module checks for every registered module if the duration between
                the last receiving packet and the current time is greater than the module specified timeout.
                If it is, the servers are temporary disabled for a period of timestamp * 2. If any packets
                are received for the temporary disabled servers the registered module is notified. 
                </para>
                <para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
                    <listitem>
                        <para><emphasis>char *module_name</emphasis> - module name
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int protocol</emphasis> - protocol
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>void (*callback_function)(int, struct receive_info *, int)</emphasis>
                        - the registered module callback function
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int timeout</emphasis> - timeput
                        </para>    
                    </listitem>
                    <listitem>
                        <para><emphasis>int auth_check</emphasis> - 0 if the authentication
                        check is disabled, 1 if the authentication check is enabled
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis>int cluster_id</emphasis> - cluster_id
                        </para>
                    </listitem>
                </itemizedlist>
		<example>
		<title><function>register_module</function> usage</title>
		<programlisting format="linespecific">
...
register_module(dialog, PROTO_BIN, cb, timeout, auth_check, cluster_id)
...
</programlisting>
		</example>
	</section>
        
        
	</section>

</chapter>