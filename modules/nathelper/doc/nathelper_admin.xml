<!-- Module User's Guide -->

<chapter>

	<title>&adminguide;</title>

	<section>
	<title>Overview</title>
	<para>
		This is a module to help with &nat; traversal. In particular,
		it helps symmetric &ua;s that don't advertise they are symmetric
		and are not able to determine their public address. fix_nated_contact
		rewrites Contact header field with request's source address:port pair.
		fix_nated_sdp adds the active direction indication to &sdp; (flag
		0x01) and updates source &ip; address too (flag 0x02).
	</para>
	<para>
		Since version 2.2, stateful ping(only SIP Pings) for nathelper is available.
		This allows you to remove contacts from usrloc location table when
		<emphasis>max_pings_lost</emphasis> pings are not responded to, each ping
		having a response timeout of <emphasis>ping_threshold</emphasis> seconds.
		In order to have this functionality, contacts must have
		<emphasis>remove_on_timeout_bflag</emphasis> flag set when inserted into
		the location table.
	</para>
	<para>
		Works with multipart messages that contain an SDP part,
		but not with multi-layered multipart messages.
	</para>
	</section>

	<section>
	<title>NAT pinging types</title>
	<para>
		Currently, the nathelper module supports two types of NAT pings:
	</para>
	<itemizedlist>
		<listitem>
			<para>
			<emphasis>UDP package</emphasis> - 4 bytes (zero filled) UDP
			packages are sent to the contact address.
			</para>
			<itemizedlist>
				<listitem>
				<para><emphasis>Advantages:</emphasis> low bandwitdh traffic,
				easy to generate by &osips;;
				</para>
				</listitem>
				<listitem>
				<para><emphasis>Disadvantages:</emphasis> unidirectional
				traffic through NAT (inbound - from outside to inside); As
				many NATs do update the bind timeout only on outbound traffic,
				the bind may expire and closed.
				</para>
				</listitem>
			</itemizedlist>
		</listitem>
		<listitem>
			<para>
			<emphasis>SIP request</emphasis> - a stateless SIP request is
			sent to the contact address.
			</para>
			<itemizedlist>
				<listitem>
				<para><emphasis>Advantages:</emphasis> bidirectional traffic
				through NAT, since each PING request from &osips; (inbound
				traffic) will force the SIP client to generate a SIP reply
				(outbound traffic) - the NAT bind will be surely kept open.
				Since version 2.2, one can also choose to remove contacts
				from the location table if a certain threshold is detected.
				</para>
				</listitem>
				<listitem>
				<para><emphasis>Disadvantages:</emphasis> higher bandwitdh
				traffic, more expensive (as time) to generate by &osips;;
				</para>
				</listitem>
			</itemizedlist>
		</listitem>
	</itemizedlist>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>usrloc</emphasis> module - only if the NATed
				contacts are to be pinged.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before
		running &osips; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>None</emphasis>.
			</para>
			</listitem>
		</itemizedlist>
		</para>
	</section>
	</section>

	<section>
	<title>Exported Parameters</title>
	<section>
		<title><varname>natping_interval</varname> (integer)</title>
		<para>
		Period of time in seconds between sending the NAT pings to all
		currently registered &ua;s to keep their &nat; bindings alive.
		Value of 0 disables this functionality.
		</para>
		<note><para>
		Enabling the NAT pinging functionality will force the module to
		bind itself to USRLOC module.
		</para></note>
		<para>
		<emphasis>
			Default value is 0.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>natping_interval</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "natping_interval", 10)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>ping_nated_only</varname> (integer)</title>
		<para>
		If this variable is set then only contacts that have
		<quote>behind_NAT</quote> flag in user location database set will
		get ping.
		</para>
		<para>
		<emphasis>
			Default value is 0.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>ping_nated_only</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "ping_nated_only", 1)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>natping_partitions</varname> (integer)</title>
		<para>
		How many partitions/chunks to be used for sending the pingings.
		One partition means sending all pingings together. Two partitions
		means to send half pings and second half at a time.
		</para>
		<para>
		<emphasis>
			Default value is 1.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>natping_partitions</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "natping_partitions", 4)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>natping_socket</varname> (string)</title>
		<para>
		Spoof the natping's source-ip to this address. Works only for IPv4.
		</para>
		<para>
		<emphasis>
			Default value is NULL.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>natping_socket</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "natping_socket", "192.168.1.1:5006")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>received_avp</varname> (str)</title>
		<para>
		The name of the Attribute-Value-Pair (AVP) used to store the URI
		containing the received IP, port, and protocol. The URI is created
		by fix_nated_register function of nathelper module and the attribute
		is then used by the registrar to store the received parameters. Do
		not forget to change the value of corresponding parameter in
		registrar module if you change the value of this parameter.
		</para>
		<note>
		<para>
		You must set this parameter if you use "fix_nated_register". In such
		case you must set the parameter with same name of "registrar"
		module to same value.
		</para>
		</note>
		<para>
		<emphasis>
			Default value is "NULL" (disabled).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>received_avp</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "received_avp", "$avp(received)")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>force_socket</varname> (string)</title>
		<para>
		Socket to be forced when sending pings. It makes sense only
		for UDP communication. If no one specified, the OS will choose.
		</para>
		<para>
		<emphasis>
			Default value is <quote>NULL</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>force_socket</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "force_socket", "localhost:33333")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>sipping_bflag</varname> (string/integer)</title>
		<para>
		What branch flag should be used by the module to identify NATed
		contacts for which it should perform NAT ping via a SIP request
		instead if dummy UDP package.
		</para>
		<para>
		<emphasis>WARNING: </emphasis>Setting INT flags is deprecated!
		Use quoted strings instead!
		</para>
		<para>
		<emphasis>
			Default value is "NULL" (disabled).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>sipping_bflag</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "sipping_bflag", "SIP_PING_FLAG")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>remove_on_timeout_bflag</varname> (string/integer)</title>
		<para>
		What flag to be used in order to activate usrloc contact removal when
		<emphasis>ping_threshold</emphasis> is exceeded.
		</para>
		<para>
		<emphasis>WARNING: </emphasis>Setting INT flags is deprecated!
		Use quoted strings instead!
		</para>
		<para>
		<emphasis>
			Default value is "NULL" (disabled).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>remove_on_timeout_bflag</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "remove_on_timeout_bflag", "RM_ONTO_FLAG")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>sipping_from</varname> (string)</title>
		<para>
		The parameter sets the SIP URI to be used in generating the SIP
		requests for NAT ping purposes. To enable the SIP request pinging
		feature, you have to set this parameter. The SIP request pinging
		will be used only for requests marked so.
		</para>
		<para>
		<emphasis>
			Default value is <quote>NULL</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>sipping_from</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "sipping_from", "sip:pinger@siphub.net")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>sipping_method</varname> (string)</title>
		<para>
		The parameter sets the SIP method to be used in generating the SIP
		requests for NAT ping purposes.
		</para>
		<para>
		<emphasis>
			Default value is <quote>OPTIONS</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>sipping_method</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "sipping_method", "INFO")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>nortpproxy_str</varname> (string)</title>
		<para>
		The parameter sets the SDP attribute used by nathelper to mark
		the packet SDP informations have already been mangled.
		</para>
		<para>
		If empty string, no marker will be added or checked.
		</para>
		<note><para>
		The string must be a complete SDP line, including the EOH (\r\n).
		</para></note>
		<para>
		<emphasis>
			Default value is <quote>a=nortpproxy:yes\r\n</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>nortpproxy_str</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "nortpproxy_str", "a=sdpmangled:yes\r\n")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>natping_tcp</varname> (integer)</title>
		<para>
		If the flag is set, TCP/TLS clients will also be pinged with
		SIP OPTIONS messages.
		</para>
		<para>
		<emphasis>
			Default value is 0 (not set).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>natping_interval</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "natping_tcp", 1)
...
</programlisting>
		</example>
	</section>


	<section>
		<title><varname>oldip_skip</varname> (string)</title>
		<para>
		Parameter which specifies whether old media ip and old origin ip
		shall be put in the sdp body. The parameter has two values :
		'o' ("a=oldoip" field shall be skipped) and 'c' ("a=oldcip" field
		shall be skipped).
		</para>
		<para>
		<emphasis>
			Default value is 0 (not set).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>natping_interval</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "oldip_skip", "oc")
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>ping_threshold</varname> (int)</title>
		<para>
			If a contact does not respond in <emphasis>ping_threshold</emphasis>
			seconds since the ping has been sent, the contact shall be removed
			after <emphasis>max_pings_lost</emphasis> unresponded pings.
		</para>
		<para>
		<emphasis>
			Default value is 3 (seconds).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>ping_threshold</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "ping_threshold", 10)
...
</programlisting>
		</example>
	</section>

	<section>
		<title><varname>max_pings_lost</varname> (int)</title>
		<para>
			Number of unresponded pings after which the contact shall be removed
		from the location table.
		</para>
		<para>
		<emphasis>
			Default value is 3 (pings).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>ping_threshold</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("nathelper", "max_pings_lost", 5)
...
</programlisting>
		</example>
	</section>




</section>


	<section>
	<title>Exported Functions</title>
	<section>
		<title>
		<function moreinfo="none">fix_nated_contact([uri_params])</function>
		</title>
		<para>
		Rewrites the URI Contact <acronym>HF</acronym> to contain request's
		source address:port. If a list of URI parameter is provided, it will
		be added to the modified contact;
		</para>
		<para>
		<emphasis>IMPORTANT NOTE: </emphasis> Changes made by this function shall
		not be seen in the async resume route. So make sure you call it in all the
		resume routes where you need the contact fixed.
		</para>
		<para>
		This function can be used from REQUEST_ROUTE, ONREPLY_ROUTE, BRANCH_ROUTE.
		</para>
		<example>
		<title><function>fix_nated_contact</function> usage</title>
		<programlisting format="linespecific">
...
if (search("User-Agent: Cisco ATA.*") {
    fix_nated_contact(";ata=cisco");
} else {
    fix_nated_contact();
}
...
</programlisting>
		</example>
	</section>
	<section>
		<title>
		<function moreinfo="none">fix_nated_sdp(flags [, ip_address])</function>
		</title>
		<para>
		Alters the SDP information in orer to facilitate NAT traversal. What
		changes to be performed may be controled via the
		<quote>flags</quote> parameter. Since version 1.12 the name of the old
		ip fields are "a=oldoip" for old origin ip and "a=oldcip" for old meda
		ip.
		</para>
		<para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
			<listitem><para>
			<emphasis>flags</emphasis> - the value may be a bitwise OR of
			the following flags:
			</para>
			<itemizedlist>
				<listitem>
					<para><emphasis>0x01</emphasis> - adds
					<quote>a=direction:active</quote> SDP line;
					</para>
				</listitem>
				<listitem>
					<para><emphasis>0x02</emphasis> - rewrite media
					&ip; address (c=) with source address of the message
					or the provided IP address (the provide IP address take
					precedence over the source address).</para>
				</listitem>
				<listitem>
					<para><emphasis>0x04</emphasis> - adds
						<quote>a=nortpproxy:yes</quote> SDP line;</para>
				</listitem>
				<listitem>
					<para><emphasis>0x08</emphasis> - rewrite IP from
					origin description (o=) with source address of the message
					or the provided IP address (the provide IP address take
					precedence over the source address).</para>
				</listitem>
			</itemizedlist>
			</listitem>
			<listitem><para>
			<emphasis>ip_address</emphasis> - IP to be used for rewriting SDP.
			If not specified, the received signalling IP will be used. The
			parameter allows pseudo-variables usage. NOTE: For the IP to be
			used, you need to use 0x02 or 0x08 flags, otherwise it will have
			no effect.
			</para>
			</listitem>
		</itemizedlist>
		<para>
		This function can be used from REQUEST_ROUTE, ONREPLY_ROUTE,
		FAILURE_ROUTE, BRANCH_ROUTE.
		</para>
		<example>
		<title><function>fix_nated_sdp</function> usage</title>
		<programlisting format="linespecific">
...
if (search("User-Agent: Cisco ATA.*") {fix_nated_sdp("3");};
...
</programlisting>
		</example>
	</section>
	<section>
		<title>
		<function moreinfo="none">add_rcv_param([flag])</function>,
		</title>
		<para>
		Add received parameter to Contact header fields or Contact URI.
		The parameter will
		contain URI created from the source IP, port, and protocol of the
		packet containing the SIP message. The parameter can be then
		processed by another registrar, this is useful, for example, when
		replicating register messages using t_replicate function to
		another registrar.
		</para>
		<para>Meaning of the parameters is as follows:</para>
		<itemizedlist>
			<listitem><para>
			<emphasis>flag</emphasis> - flags to indicate if the parameter
			should be added to Contact URI or Contact header. If the flag is
			non-zero, the parameter will be added to the Contact URI. If not
			used or equal to zero, the parameter will go to the Contact
			header.
			</para></listitem>
		</itemizedlist>
		<para>
		This function can be used from REQUEST_ROUTE.
		</para>
		<example>
		<title><function>add_rcv_paramer</function> usage</title>
		<programlisting format="linespecific">
...
add_rcv_param(); # add the parameter to the Contact header
....
add_rcv_param("1"); # add the parameter to the Contact URI
...
</programlisting>
		</example>
	</section>
	<section>
		<title>
		<function moreinfo="none">fix_nated_register()</function>
		</title>
		<para>
		The function creates a URI consisting of the source IP, port, and
		protocol and stores the URI in an Attribute-Value-Pair. The URI will
		be appended as "received" parameter to Contact in 200 OK and
		registrar will store it in the user location database.
		</para>
		<para>
		This function can be used from REQUEST_ROUTE.
		</para>
		<example>
		<title><function>fix_nated_register</function> usage</title>
		<programlisting format="linespecific">
...
fix_nated_register();
...
</programlisting>
		</example>
	</section>
	<section>
		<title>
			<function>nat_uac_test(flags)</function>
		</title>
		<para>
			Tries to guess if client's request originated behind a nat.
			The parameter determines what heuristics is used.
		</para>
		<para>Meaning of the flags is as follows:</para>
		<itemizedlist>
			<listitem><para>
			<emphasis>1</emphasis> -  Contact header field is searched
			for occurrence of RFC1918 / RFC6598 addresses.
			</para></listitem>
			<listitem><para>
			<emphasis>2</emphasis> -  the "received" test is used: address
			in Via is compared against source IP address of signaling
			</para></listitem>
			<listitem><para>
			<emphasis>4</emphasis> -  Top Most VIA is searched
			for occurrence of RFC1918 / RFC6598 addresses
			</para></listitem>
			<listitem><para>
			<emphasis>8</emphasis> -  SDP is searched for occurrence of
			RFC1918 / RFC6598 addresses
			</para></listitem>
			<listitem><para>
			<emphasis>16</emphasis> -  test if the source port is different
			from the port in Via
			</para></listitem>
			<listitem><para>
			<emphasis>32</emphasis> -  address in Contact is compared against
			source IP address of signaling
			</para></listitem>
			<listitem><para>
			<emphasis>64</emphasis> -  Port in Contact is compared against
			source port of signaling
			</para></listitem>
		</itemizedlist>
		<para>
		All flags can be bitwise combined, the test returns true if any of
		the tests identified a NAT.
		</para>
		<para>
		This function can be used from REQUEST_ROUTE, ONREPLY_ROUTE, FAILURE_ROUTE, BRANCH_ROUTE.
		</para>
	</section>


	<section>
		<title><acronym>MI</acronym> Commands</title>
		<section>
			<title><function moreinfo="none">nh_enable_ping</function></title>
			<para>
			Enables natping if parameter value greater than 0.
			Disables natping if parameter value is 0.
			With no parameter, it returns the current natping status.
			</para>
			<para>
			The function may takean optional parameter (for set operations) -
			a number in decimal format.
			</para>
			<example>
			<title><function moreinfo="none">nh_enable_ping</function> usage</title>
			<programlisting format="linespecific">
...
$ opensipsctl fifo nh_enable_ping
Status:: 1
$
$ opensipsctl fifo nh_enable_ping 0
$
$ opensipsctl fifo nh_enable_ping
Status:: 0
$
...
			</programlisting>
			</example>
		</section>

	</section>
	</section>

</chapter>

