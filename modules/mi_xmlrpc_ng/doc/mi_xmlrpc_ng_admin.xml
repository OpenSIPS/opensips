<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		This module implements a xmlrpc server that handles xmlrpc
		requests and generates xmlrpc responses.
		When a xmlrpc message is received a default method is executed.
	</para>
	<para>
		At first, it looks up the MI command.
		If found it parses the called procedure's parameters
		into a MI tree and the command is executed.
		A MI reply tree is returned that is formatted back in xmlrpc.
		The response is built in two ways - like a string that
		contains the MI tree nodes information (name, values and
		attributes) or like an array whose elements are consisted
		of each MI tree node stored information.
	</para>
	</section>
	
	<section>
	<title>Dependencies</title>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before
		running &osips; with this module loaded:
		<itemizedlist>
		<listitem>
			<para><emphasis>libxml2</emphasis></para>
		</listitem>
		</itemizedlist>
		</para>
	</section>
	<section>
		<title>&osips; Modules</title>
		<para>
		The following modules must be loaded before this module:
		<itemizedlist>
		<listitem>
			<para><emphasis>httpd</emphasis> module.</para>
		</listitem>
		</itemizedlist>
		</para>
	</section>
	</section>
	
	<section>
	<title>Exported Parameters</title>
	<section>
		<title><varname>http_root</varname>(string)</title>
		<para>
		Specifies the root path for xmlrpc requests:
		http://[opensips_IP]:[opensips_httpd_port]/[http_root]
		</para>
		<para>
		<emphasis>The default value is "RPC2".</emphasis>
		</para>
		<example>
		<title>Set <varname>http_root</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("mi_xmlrpc_ng", "http_root", "opensips_mi_xmlrpc")
...
</programlisting>
		</example>
	</section>
	<section>
	<title><varname>format_version</varname>(integer)</title>
	<para>
	Specifies which formatting to be used for the output generated by the 
	module. The value of 2 will generate a response broken in many tags 
	which doesn't require string parsing, only xml parsing, this is the newer
	version. The other accepted value is 1 which will generate a long simple 
	sting response, this is the older vesion.
	</para>
	<para>
	<emphasis>The default value is 2.</emphasis>
	</para>
	<example>
	<title>Set <varname>format_version</varname> parameter</title>
	<programlisting format="linespecific">
...
modparam("mi_xmlrpc_ng", "format_version", 1)
...
</programlisting>
		</example>
	</section>
	</section>

	<section>
	<title>Exported Functions</title>
		<para>
		No function exported to be used from configuration file.
		</para>
	</section>

	<section>
	<title>Known issues</title>
		<para>
		Commands with large responses (like ul_dump) will fail if the
		configured size of the httpd buffer is to small (or if there
		isn't enough pkg memory configured).
		</para>
		<para>
		Future realeases of the httpd and mi_xmlrpc_ng modules
		will address this issue.
		</para>
	</section>

	<section>
	<title>Example</title>
		<para>
		This is an example showing the xmlrpc format for the
		<quote>get_statistics net: uri:</quote> MI commad:
		response.
		</para>
		<example>
		<title>XMLRPC request</title>
		<programlisting format="linespecific">
<![CDATA[
POST /xmlrpc HTTP/1.0
Host: my.host.com
User-Agent: My xmlrpc UA
Content-Type: text/xml
Content-Length: 216

<?xml version='1.0'?>
<methodCall>
	<methodName>get_statistics</methodName>
	<params>
		<param>
			<value><string>net:</string></value>
		</param>
		<param>
			<value><string>uri:</string></value>
		</param>
	</params>
</methodCall>


HTTP/1.0 200 OK
Content-Length: 236
Content-Type: text/xml; charset=utf-8
Date: Mon, 8 Mar 2013 12:00:00 GMT

<?xml version="1.0" encoding="UTF-8"?><methodResponse><params><param><value><string>
:: net:waiting_udp = 0
:: net:waiting_tcp = 0
:: uri:positive checks = 0
:: uri:negative_checks = 0
</string></value></param></params></methodResponse>
]]>
</programlisting>
	</example>
	</section>

</chapter>

