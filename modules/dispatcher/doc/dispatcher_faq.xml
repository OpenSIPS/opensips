<!-- Module FAQ -->

<chapter>

	<title>&faqguide;</title>
	<qandaset defaultlabel="number">

	<qandaentry>
		<question>
		<para>
		Does <emphasis>dispatcher</emphasis> provide a fair distribution?
		</para>
		</question>
		<answer>
		<para>
			There is no guarantee of that. You should do some measurements
			to decide what distribution algorithm fits better in your
			environment.
		</para>
		</answer>
	</qandaentry>

	<qandaentry>
		<question>
		<para>Is <emphasis>dispatcher</emphasis> dialog stateful?</para>
		</question>
		<answer>
		<para>
			No. Dispatcher is stateless, although some distribution algorithms
			are designed to select same destination for subsequent requests of
			the same dialog (e.g., hashing the call-id).
		</para>
		</answer>
	</qandaentry>

	<qandaentry>
		<question>
			<para>What happened with the <emphasis>ds_is_from_list()</emphasis>
			function?</para>
		</question>
		<answer>
			<para>
			The function was replaced by the more generic
			<emphasis>ds_is_in_list()</emphasis> function that takes as
			parameters the IP and PORT to test against the dispatcher list.
			</para>
			<para>
			ds_is_from_list() == ds_is_in_list("$si","$sp")
			</para>
		</answer>
	</qandaentry>

	<qandaentry>
		<question>
			<para>How is weight and priority used by the dispatcher in selecting
			a destination?</para>
		</question>
		<answer>
			<para>
			The <emphasis>weight</emphasis> of a destination is currently used in
			the hashing algorithms and it increases the probability of it to be
			chosen(if we have two destinations with weights 1 respectively
			4 than the second one is 4 times more likely to be selected than the
			other). The sum of all weights does not need to add up to a specific
			number.
			Weights are now used in the round-robin algorithm, a destination is
			chosen a number of times equal to its weight consecutively before going
			to the next destination.
			</para>
			<para>
			The  <emphasis>priority</emphasis> field is used at ordering the
			destinations from a set. It does not affect the overall probability
			of a destination to be chosen.  It is reflected when listing the
			destination, the field can definetly be used in further selecting algorithms.
			</para>
		</answer>
	</qandaentry>

	<qandaentry>
		<question>
			<para>What happened with the <emphasis>list_file</emphasis>
			module parameter ?</para>
		</question>
		<answer>
			<para>
			The support for text file (for provisioning destinations) was dropped.
			Only the DB support (provisioning via a DB table) is now available - if
			you still want to use a text file for provisioning, use db_text DB driver
			(DB emulated via text files)
			</para>
		</answer>
	</qandaentry>

	<qandaentry>
		<question>
		<para>Where can I find more about &osips;?</para>
		</question>
		<answer>
		<para>
			Take a look at &osipshomelink;.
		</para>
		</answer>
	</qandaentry>
	<qandaentry>
		<question>
		<para>Where can I post a question about this module?</para>
		</question>
		<answer>
		<para>
			First at all check if your question was already answered on one of
			our mailing lists:
		</para>
		<itemizedlist>
			<listitem>
			<para>User Mailing List - &osipsuserslink;</para>
			</listitem>
			<listitem>
			<para>Developer Mailing List - &osipsdevlink;</para>
			</listitem>
		</itemizedlist>
		<para>
			E-mails regarding any stable version should be sent to
			&osipsusersmail; and e-mail regarding development versions or SVN
			snapshots should be send to &osipsdevmail;.
		</para>
		<para>
			If you want to keep the mail private, send it to &osipshelpmail;.
		</para>
	    </answer>
	</qandaentry>
	<qandaentry>
	    <question>
		<para>How can I report a bug?</para>
	    </question>
	    <answer>
		<para>
		    Please follow the guidelines provided at: &osipsbugslink;
		</para>
	    </answer>
	</qandaentry>
    </qandaset>
</chapter>

