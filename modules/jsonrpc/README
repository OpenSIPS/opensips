JSON-RPC Module
     __________________________________________________________

   Table of Contents

   1. Admin Guide

        1.1. Overview
        1.2. Dependencies

              1.2.1. OpenSIPS Modules
              1.2.2. External Libraries or Applications

        1.3. Exported Parameters

              1.3.1. connect_timeout (integer)
              1.3.2. write_timeout (integer)
              1.3.3. read_timeout (integer)

        1.4. Exported Functions

              1.4.1. jsonrpc_request(destination, method, params,
                      ret_pvar)

              1.4.2. jsonrpc_notification(destination, method,
                      params)

   2. Contributors

        2.1. By Commit Statistics
        2.2. By Commit Activity

   3. Documentation

        3.1. Contributors

   List of Tables

   2.1. Top contributors by DevScore^(1), authored commits^(2) and
          lines added/removed^(3)

   2.2. Most recently active contributors^(1) to this module

   List of Examples

   1.1. Set connect_timeout parameter
   1.2. Set write_timeout parameter
   1.3. Set read_timeout parameter
   1.4. jsonrpc_request() function usage
   1.5. jsonrpc_notification() function usage

Chapter 1. Admin Guide

1.1. Overview

   This module is an implementation of an JSON-RPC v2.0 client
   http://www.jsonrpc.org/specification. that can send a call to a
   JSON-RPC server over a TCP connection.

   NOTE that the current version of this module does not support
   TCP connection reusage, nor asynchronous commands.

1.2. Dependencies

1.2.1. OpenSIPS Modules

   The following modules must be loaded before this module:
     * none.

1.2.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running OpenSIPS with this module loaded:
     * none

1.3. Exported Parameters

1.3.1. connect_timeout (integer)

   The amount of milliseconds OpenSIPS waits to connect to the the
   JSON-RPC server, until it times out.

   Default value is “500 milliseconds”.

   Example 1.1. Set connect_timeout parameter
...
modparam("jsonrpc", "connect_timeout", 200)
...

1.3.2. write_timeout (integer)

   The amount of milliseconds OpenSIPS waits to send a RPC command
   to the JSON-RPC server, until it times out.

   Default value is “500 milliseconds”.

   Example 1.2. Set write_timeout parameter
...
modparam("jsonrpc", "write_timeout", 300)
...

1.3.3. read_timeout (integer)

   The amount of milliseconds OpenSIPS waits for the JSON-RPC
   server to respond to a JSON-RPC request, until it times out.
   Note that these parameter only affects the jsonrpc_request
   command.

   Default value is “500 milliseconds”.

   Example 1.3. Set read_timeout parameter
...
modparam("jsonrpc", "read_timeout", 300)
...

1.4. Exported Functions

1.4.1.  jsonrpc_request(destination, method, params, ret_pvar)

   Does a JSON-RPC request to the JSON-RPC server indicated in the
   destination parameter, and waits for a reply from it.

   This function can be used from any route.

   The function has the following parameters:
     * destination - address of the JSON-RPC server. The format
       needs to be IP:port.
     * method - the method used in the RPC request.
     * params - these are the parameters sent to the RPC method.
       This parameter needs to be a properly formated JSON array,
       or JSON object, according the the JSON-RPC specifications.
     * ret_pvar a writeable variable used to store the result of
       the JSON-RPC command. If the command returns an error, the
       variable will be populated with the error JSON, otherwise,
       with the body of the JSON-RPC result.

   The function has the following return codes:
     * 1 - JSON-RPC command executed successfully, and the server
       returned success. You can check the ret_pvar variable for
       the result.
     * -1 - There was an internal error during processing.
     * -2 - There was a connection (timeout or connect) error with
       the destination.
     * -3 - The JSON-RPC was successfully run, but the server
       returned an error. Check the ret_pvar value to find out
       more information.

   Example 1.4. jsonrpc_request() function usage
        ...
        if (!jsonrpc_request("127.0.0.1", "add", "[1,2]", "$var(ret)"))
{
                xlog("JSON-RPC command failed with $var(ret)\n");
                exit;
        }
        xlog(JSON-RPC command returned $var(ret)\n");
        # parse $var(ret) as JSON, or whatever the function returns
        ...

1.4.2.  jsonrpc_notification(destination, method, params)

   Does a JSON-RPC notification to the JSON-RPC server indicated
   in the destination parameter, but unlike jsonrpc_request(), it
   does not wait for a reply from the JSON-RPC server.

   This function can be used from any route.

   The function receives the same parameters as jsonrpc_request(),
   except for the ret_pvar. Also, the same values are returned.

   Example 1.5. jsonrpc_notification() function usage
        ...
        if (!jsonrpc_notification("127.0.0.1", "block_ip", "{ \"ip": \"$
si\" }")) {
                xlog("JSON-RPC notification failed with $rc!\n");
                exit;
        }
        ...

Chapter 2. Contributors

2.1. By Commit Statistics

   Table 2.1. Top contributors by DevScore^(1), authored
   commits^(2) and lines added/removed^(3)
     Name DevScore Commits Lines ++ Lines --
   1. Razvan Crainea (@razvancrainea) 12 3 927 10
   2. Liviu Chircu (@liviuchircu) 6 4 16 32
   3. Vlad Patrascu (@rvlad-patrascu) 5 1 27 122
   4. Bogdan-Andrei Iancu (@bogdan-iancu) 4 2 3 1
   5. Peter Lemenkov (@lemenkov) 3 1 1 1

   (1) DevScore = author_commits + author_lines_added /
   (project_lines_added / project_commits) + author_lines_deleted
   / (project_lines_deleted / project_commits)

   (2) including any documentation-related commits, excluding
   merge commits. Regarding imported patches/code, we do our best
   to count the work on behalf of the proper owner, as per the
   "fix_authors" and "mod_renames" arrays in
   opensips/doc/build-contrib.sh. If you identify any
   patches/commits which do not get properly attributed to you,
   please submit a pull request which extends "fix_authors" and/or
   "mod_renames".

   (3) ignoring whitespace edits, renamed files and auto-generated
   files

2.2. By Commit Activity

   Table 2.2. Most recently active contributors^(1) to this module
                     Name                   Commit Activity
   1. Bogdan-Andrei Iancu (@bogdan-iancu) Dec 2018 - Apr 2019
   2. Vlad Patrascu (@rvlad-patrascu)     Apr 2019 - Apr 2019
   3. Liviu Chircu (@liviuchircu)         Apr 2018 - Nov 2018
   4. Peter Lemenkov (@lemenkov)          Jun 2018 - Jun 2018
   5. Razvan Crainea (@razvancrainea)     Mar 2018 - Mar 2018

   (1) including any documentation-related commits, excluding
   merge commits

Chapter 3. Documentation

3.1. Contributors

   Last edited by: Peter Lemenkov (@lemenkov), Liviu Chircu
   (@liviuchircu), Razvan Crainea (@razvancrainea).

   Documentation Copyrights:

   Copyright © 2018 www.opensips-solutions.com
