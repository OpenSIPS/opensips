<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		The B2BUA implementation in OpenSIPS is separated in two layers:
			<itemizedlist>
			<listitem>
		a lower one(coded in b2b_entities module)- which implements the basic functions of a UAS and UAC
			</listitem>
			<listitem>
		an upper one - which represents the logic engine of B2BUA, responsible of actually
			implementing the B2BUA services using the functions offered by the low level.
			</listitem>
	</itemizedlist>
	This module is a B2BUA upper level implementation that can be used with b2b_entities
	module to have B2BUA that can be configured to provide some PBX services.
	The B2B services are coded in an XML scenario document. The b2b_logic module
	examines this document and uses the functions provided by the b2b_entities
	module to achieve the actions specified in the document and enable the service.
	</para>
	<para>
		A scenario can be instantiated in two ways:
		<itemizedlist>
			<listitem>
				from the script - at the receipt of a initial message
			</listitem>
			<listitem>
				with a extern command (MI) command - the server will connect two 
				end points in a session(Third Party Call Control).
			</listitem>
		</itemizedlist>
	</para>
	</section>

	<section>
	<title>Dependencies</title>
	<section>
		<title>&osips; Modules</title>
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>b2b_entities, a db module</emphasis>
			</para>
			</listitem>
			</itemizedlist>
	</section>
	
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before running
		&osips; with this module loaded:
		</para>
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>libxml2-dev</emphasis>
			</para>
			</listitem>
			</itemizedlist>
	</section>
	</section>

	<section>
		<title>Exported Parameters</title>
	<section>
		<title><varname>hash_size</varname> (int)</title>
		<para>
			The size of the hash table that stores the scenario instatiation entities.
		</para>
		<para>
		<emphasis>Default value is <quote>9</quote>
		</emphasis>
		 (512 records).
		</para>
		<example>
		<title>Set <varname>server_hsize</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "hash_size", 10)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>script_scenario</varname> (str)</title>
		<para>
			This parameter should be set with the path of a document
			that contains a scenario that can be instantiated from the
			script at the receipt of an initial message.
		</para>
		<para>
		This parameter can be set more than once.
		</para>
		<example>
		<title>Set <varname>script_scenario</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "script_scenario", "/usr/local/opensips/scripts/b2b_prepaid.xml")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>extern_scenario</varname> (str)</title>
		<para>
			This parameter should be set with the path of a document
			that contains a scenario that can be instantiated with an MI command.
		</para>
		<para>
		This parameter can be set more than once.
		</para>
		<example>
		<title>Set <varname>script_scenario</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "extern_scenario", "/usr/local/opensips/scripts/b2b_marketing.xml")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>cleanup_period</varname> (int)</title>
		<para>
			The time interval at which to search for an hanged b2b context.
			A scenario is considered expired if the duration of a session exceeds the
			lifetime specified in the scenario.
			At that moment, BYE is sent in all the dialogs from that context and the
			context is deleted.
		</para>
		<para>
		<emphasis>Default value is <quote>100</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname>cleanup_period</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "cleanup_period", 60)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>custom_headers_regexp</varname> (str)</title>
		<para>
		Regexp to search SIP header by names that should be passed
		from the dialog of one side to the other side. There are a number
		of headers that are passed by default. They are: 
		<itemizedlist>
			<listitem>Content-Type</listitem>
			<listitem>Supported</listitem>
			<listitem>Allow</listitem>
			<listitem>Proxy-Require</listitem>
			<listitem>Session-Expires</listitem>
			<listitem>Min-SE</listitem>
			<listitem>Require</listitem>
			<listitem>RSeq</listitem>
		</itemizedlist>
		If you wish some other headers to be passed also you should define them
		by setting this parameter.
		</para>
		<para>
		It can be in forms like "regexp", "/regexp/" and "/regexp/flags".
		</para>
		<para>Meaning of the flags is as follows:</para>
		<itemizedlist>
			<listitem><para>
			<emphasis>i</emphasis> - Case insensitive search.
			</para></listitem>
			<listitem><para>
			<emphasis>e</emphasis> - Use extended regexp.
			</para></listitem>
		</itemizedlist>
		<para>
		<emphasis>Default value is <quote>NULL</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname></varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "custom_headers_regexp", "/^x-/i")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>custom_headers</varname> (str)</title>
		<para>
		A list of SIP header names delimited by ';' that should be passed
		from the dialog of one side to the other side. There are a number
		of headers that are passed by default. They are: 
		<itemizedlist>
			<listitem>Max-Forwards (it is decreased by 1)</listitem>
			<listitem>Content-Type</listitem>
			<listitem>Supported</listitem>
			<listitem>Allow</listitem>
			<listitem>Proxy-Require</listitem>
			<listitem>Session-Expires</listitem>
			<listitem>Min-SE</listitem>
			<listitem>Require</listitem>
			<listitem>RSeq</listitem>
		</itemizedlist>
		If you wish some other headers to be passed also you should define them
		by setting this parameter.
		</para>
		<para>
		<emphasis>Default value is <quote>NULL</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname></varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "custom_headers", "User-Agent;Date")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>use_init_sdp</varname> (int)</title>
		<para>
		This parameter modifies the behaviour of the B2BUA when bridging
		and a provisional media uri is set. For playing media while the callee
		answers (that is connecting the caller to a media server), the bridging
		with the callee must start by sending an Invite to it. The correct way
		is to send an Invite without a body in this case, but it has been observed
		that not many gateways support this. So, the solution is to use the sdp
		received in the first Invite from the caller and put it as the body for this
		invite. By setting this parameter, this behavior is enabled.
		You can also set use_init_sdp per scenario and overwrite this global value.
		</para>
		<para>
		<emphasis>Default value is <quote>0</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname></varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "use_init_sdp", 1)
...
	</programlisting>
		</example>
	</section>
	<section>
		<title><varname>db_url</varname> (str)</title>
		<para>
			Database URL.
		</para>
		<example>
		<title>Set <varname>db_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "db_url", "mysql://opensips:opensipsrw@127.0.0.1/opensips")
...
	</programlisting>
		</example>
	</section>
	<section>
		<title><varname>update_period</varname> (int)</title>
		<para>
			The time interval at which to update the info in database.
		</para>
		<para>
		<emphasis>Default value is <quote>100</quote>.</emphasis>
		</para>
		<example>
		<title>Set <varname>update_period</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "update_period", 60)
...
	</programlisting>
		</example>
	</section>
	<section>
		<title><varname>max_duration</varname> (int)</title>
		<para>
			The maximum duration of a call.
		</para>
		<para>
		<emphasis>Default value is <quote>12 * 3600 (12 hours)</quote>.</emphasis>
		</para>
		<para>If you set it to 0, there will be no limitation.</para>
		<example>
		<title>Set <varname>max_duration</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "max_duration", 7200)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>b2bl_from_spec_param</varname> (string)</title>
		<para>
			The name of the pseudo variable for storing the new
			<quote>From</quote> header.
			The PV must be set before calling <quote>b2b_init_request</quote>.
		</para>
		<para>
		<emphasis>Default value is <quote>NULL</quote> (disabled).</emphasis>
		</para>
		<example>
		<title>Set <varname>b2bl_from_spec_param</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "b2bl_from_spec_param", "$var(b2bl_from)")
...
route{
	...
	# setting the From header
	$var(b2bl_from) = "\"Call ID\" &lt;sip:user@opensips.org&gt;";
	...
	b2b_init_request("top hiding");
	...
}
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>server_address</varname> (str)</title>
		<para>
			The IP address of the machine that will be used as Contact in
			the generated messages. This is compulsory only when using external
			scenarios. For the script scenarios, if it is not set, it is constructed
			dynamically from the socket where the initiating request was received.
			This socket will be used to send all the requests, replies for that
			scenario instantiation.
		</para>
		<example>
		<title>Set <varname>server_address</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "server_address", "sip:sa@10.10.10.10:5060")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>init_callid_hdr</varname> (str)</title>
		<para>
			The module offers the possibility to insert the original callid in a header
			in the generated Invites. If you want this, set this parameter to the name
			of the header in which to insert the original callid.
		</para>
		<example>
		<title>Set <varname>init_callid_hdr</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "init_callid_hdr", "Init-CallID")
...
	</programlisting>
		</example>
	</section>
	<section>
		<title><varname>db_mode</varname> (int)</title>
		<para>
			The B2B modules have support for the 3 type of database storage
		</para>
		<para>
		<itemizedlist>
				<listitem>NO DB STORAGE - set this parameter to 0</listitem>
				<listitem>WRITE THROUGH (synchronous write in database) - set this parameter to 1</listitem>
				<listitem>WRITE BACK (update in db from time to time) - set this parameter to 2</listitem>
		</itemizedlist>
		</para>
		<para>
		<emphasis>Default value is <quote>2</quote> (WRITE BACK).</emphasis>
		</para>
		<example>
		<title>Set <varname>db_mode</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "db_mode", 1)
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>db_table</varname> (str)</title>
		<para>
			Name of the database table to be used
		</para>
		<para>
		<emphasis>Default value is <quote>b2b_logic</quote> </emphasis>
		</para>
		<example>
		<title>Set <varname>db_table</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "db_table", "some_table_name")
...
	</programlisting>
		</example>
	</section>

	<section>
		<title><varname>b2bl_th_init_timeout</varname> (int)</title>
		<para>
			Call setup timeout for topology hiding scenario.
		</para>
		<para>
		<emphasis>Default value is <quote>60</quote> </emphasis>
		</para>
		<example>
		<title>Set <varname>b2bl_th_init_timeout</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("b2b_logic", "b2bl_th_init_timeout", 60)
...
	</programlisting>
		</example>
	</section>

	</section>

	<section>
		<title>Exported Functions</title>
	<section>
		<title>
		<function moreinfo="none">b2b_init_request</function>
		</title>
		<para>
			This is the function that must be called by the script writer
			on an initial INVITE for which a B2B scenario must be instantiated.
			It is up to the script writer to decide which are the criteria to decide
			for which messages certain scenarios must be instantiated.
		</para>
		<para>
			The first parameter is the identifier for the scenario and possible flags.
			This is defined in the XML document as an attribute of the root node
			or "top hiding" for internal topology hiding scenario.
			It can be passed as "scenario" or "scenario_name/flags".
		</para>
		<para>Meaning of the flags is as follows:</para>
		<itemizedlist>
			<listitem><para>
			<emphasis>t[nn]</emphasis> -  Call setup timeout for topology hiding scenario.
			Example: t300.
			</para></listitem>
			<listitem><para>
			<emphasis>a</emphasis> -  Transparent authentication. In this mode b2b passes your 401
			or 407 authentication request to destination server.
			</para></listitem>
			<listitem><para>
			<emphasis>p</emphasis> -  Preserve To: header.
			</para></listitem>
		</itemizedlist>
		<para>
			Then it can take at most 4 other parameters that represent the parameters for
			the xml scenario. The expected number of parameters is also specified as an attribute
			in the root node of the XML scenario.
		</para>
	<note><para>
		If you have a multi interface setup and want to chance the outbound interface,
		it is mandatory to use the "force_send_socket()" core function before passing
		control to b2b function. If you do not do it, the requests may be correctly routed,
		but the SIP pacakge may be invalid (as Contact, Via, etc).
	</para></note>
		<example>
			<title><function>b2b_init_request</function> usage</title>
		<programlisting format="linespecific">
...
if(is_method("INVITE") &amp;&amp; !has_totag() &amp;&amp; prepaid_user())
   b2b_init_request("prepaid", "sip:320@opensips.org:5070",
      "sip:321@opensips.org:5070"));
...
	</programlisting>
		</example>
	</section>
	<section>
		<title>
		<function moreinfo="none">b2b_bridge_request(b2bl_key,entity_no)</function>
		</title>
		<para>
			This function will bridge an initial INVITE with one of the
			particapnts from an existing b2b dialog.
		</para>
		<para>Parameters:</para>
		<itemizedlist>
			<listitem><para>
				<emphasis>b2bl_key</emphasis> - a pseudo-variable that
				contains the b2b_logic key
			</para></listitem>
			<listitem><para>
				<emphasis>entity_no</emphasis> - a pseudo-variable that
				holds the entity of the entity/participant to bridge.
			</para></listitem>
		</itemizedlist>
		<example>
			<title><function>b2b_bridge_request</function> usage</title>
		<programlisting format="linespecific">
...
modparam("b2b_entities", "script_req_route", "b2b_request")
...
route[b2b_request]
{
   # incoming requests from the B2B entities
   ...
   if ($ci~="^B2B") { #keep this aligned with b2b_key_prefix
      # request coming from the UAC side;
      # the Call-ID carries the B2B key ID
      if (is_method("BYE") {
         $var(entity) = 1;
         b2b_bridge_request("$ci","$var(entity)");
      }
   }
   ...
}
...
		</programlisting>
		</example>
	</section>

</section>

<section>
	<title>Exported MI Functions</title>
	<section>
		<title>
		<function moreinfo="none">b2b_trigger_scenario</function>
		</title>
		<para>
		This command instantiated a B2B scenario.
		</para>
		<para>
		Name: <emphasis>b2b_trigger_scenario</emphasis>
		</para>
		<para>Parameters:</para>
		<itemizedlist>
			<listitem>
				<para>senario_id : the id of the scenario to be instantiated.
				</para>
			</listitem>
			<listitem>
				<para>scenario parameters - it can take 4 more parameters that are scenario parameters</para>
			</listitem>
		</itemizedlist>
		<para>
		MI FIFO Command Format:
		</para>
	<programlisting  format="linespecific">
	:b2b_trigger_scenario:fifo_reply
	marketing
	sip:bob@opensips.org
	sip:322@opensips.org:5070
	sip:alice@opensips.org
	_empty_line_
		</programlisting>
	</section>

	<section>
		<title>
		<function moreinfo="none">b2b_bridge</function>
		</title>
		<para>
			This command can be used by an external application to tell B2BUA to bridge a
			call party from an on going dialog to another destination. By default the caller
			is bridged to the new uri and BYE is set to the callee. You can instead bridge
			the callee if you send 1 as the third parameter. Also, if a fourth parameter is 
		</para>
		<para>
		Name: <emphasis>b2b_bridge</emphasis>
		</para>
		<para>Parameters:</para>
		<itemizedlist>
			<listitem>
				<para>dialog-id : the id of the dialog. If you set the module parameter dialog-id
				the server will include the dialogid in the generated Invites as the content of a
				header with name 'Dialog-ID'.
				</para>
			</listitem>
			<listitem>
				<para>new uri - the uri of the new destination</para>
			</listitem>
			<listitem>
				<para>flag to specify that the callee must be bridged to the new destination.
					It is optional. If not present the caller will be bridged.</para>
			</listitem>
			<listitem>
				<para>provisional media uri - the uri of a media server able to play 
					provisional media starting from the beginning of the bridging scenario
					to the end of it. It is optional. If not present, no other entity will be
					envolved in the bridging scenario</para>
			</listitem>
		</itemizedlist>
		<para>MI FIFO Command Format:</para>
	<programlisting  format="linespecific">
	:b2b_bridge:fifo_reply
	1020.30
	sip:alice@opensips.org
	_empty_line_
	</programlisting>
		<para>opensipsctl Command Format:</para>
	<programlisting  format="linespecific">
	opensipsctl b2b_bridge 1020.30 sip:alice@opensips.org
	</programlisting>
	</section>

	<section>
		<title>
		<function moreinfo="none">b2b_list</function>
		</title>
		<para>
			This command can be used to list the internals of b2b_logic entities.
		</para>
		<para>
		Name: <emphasis>b2b_list</emphasis>
		</para>
		<para>Parameters: <emphasis>none</emphasis></para>
		<itemizedlist>
		</itemizedlist>
		<para>MI FIFO Command Format:</para>
	<programlisting  format="linespecific">
	:b2b_list:_reply_fifo_file_
	_empty_line_
	</programlisting>
		<para>opensipsctl Command Format:</para>
	<programlisting  format="linespecific">
	opensipsctl fifo b2b_list
	</programlisting>
	</section>

</section>

</chapter>

